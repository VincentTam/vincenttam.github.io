<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | Blog 1]]></title>
  <link href="http://vincenttam.github.io/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://vincenttam.github.io/"/>
  <updated>2014-12-11T23:20:05+08:00</updated>
  <id>http://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Update Vim Plugins Managed by pathogen.vim]]></title>
      <link href="http://vincenttam.github.io/blog/2014/10/11/update-vim-plugins-managed-by-pathogen-dot-vim/"/>
    
    <updated>2014-10-11T16:58:38+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/10/11/update-vim-plugins-managed-by-pathogen-dot-vim</id>
    
      <content type="html"><![CDATA[<h2 id="objective">Objective</h2>

<p>To update <em>many</em> Vim plugins under <code>runtimepath</code> managed by
<a href="https://github.com/tpope/vim-pathogen">pathogen.vim</a> <em>efficiently</em>.</p>

<h2 id="raison-dtre">Raison d’être</h2>

<p>With the <code>:BundleUpdate</code> editor command, users of <a href="https://github.com/gmarik/Vundle.vim">Vundle</a> can easily
keep his/her plugins up to date with the remote repository.  However,
pathogen.vim is a popular plugin, so it’s worth studying.</p>

<!-- more -->

<h2 id="method">Method</h2>

<p>Write a for-loop which runs through the directories (i.e. plugins
folders) and</p>

<ol>
  <li><code>cd $f</code>: change to the plugin folder</li>
  <li><code>git pull</code>: fetch and merge commits from the tracking branch
    <ul>
      <li>One can set the tracking branch with <code>git branch -u
 [remote]/branch</code>.  In this case, the command is <code>git branch -u
 origin/master</code>.</li>
    </ul>
  </li>
  <li><code>cd ..</code>: <em>without</em> this command, it won’t proceed to the next
folder.</li>
</ol>

<pre class="cliUB"><code>$ for f in $(ls); do cd $f;echo $f;git pull;echo "";cd ..;done
DrawIt~
Already up-to-date.

FuzzyFinder
Already up-to-date.

L9
Already up-to-date.

OmniCppComplete
Already up-to-date.

a.vim
Already up-to-date.

c.vim
Already up-to-date.

cscope.vim
Already up-to-date.

loremipsum
Already up-to-date.

nerdtree
Already up-to-date.

taglist.vim
Already up-to-date.

tlib_vim
remote: Counting objects: 9, done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 9 (delta 1), reused 4 (delta 1)
Unpacking objects: 100% (9/9), done.
From git://github.com/tomtom/tlib_vim
   b7fc1e3..bc4097b  master     -&gt; origin/master
Updating b7fc1e3..bc4097b
Fast-forward
 autoload/tlib/input.vim | 20 ++++++++++++++------
 plugin/02tlib.vim       |  4 ++--
 2 files changed, 16 insertions(+), 8 deletions(-)

vim-addon-mw-utils
Already up-to-date.

vim-easy-align
remote: Counting objects: 24, done.
remote: Compressing objects: 100% (19/19), done.
remote: Total 24 (delta 6), reused 14 (delta 2)
Unpacking objects: 100% (24/24), done.
From https://github.com/junegunn/vim-easy-align
   cbb005e..2595ebf  master     -&gt; origin/master
Updating cbb005e..2595ebf
Fast-forward
 .travis.yml                 |  4 +++-
 README.md                   |  2 +-
 autoload/easy_align.vim     | 20 ++++++--------------
 test/blockwise.vader        | 22 ++++++++++++++++++++++
 test/fixed.vader            | 13 +++++++++++++
 test/include/setup.vader    |  1 +
 test/include/teardown.vader |  3 ++-
 7 files changed, 48 insertions(+), 17 deletions(-)
 create mode 100644 test/blockwise.vader

vim-easymotion
remote: Counting objects: 27, done.
remote: Compressing objects: 100% (17/17), done.
remote: Total 27 (delta 11), reused 18 (delta 9)
Unpacking objects: 100% (27/27), done.
From https://github.com/Lokaltog/vim-easymotion
   3b8a2dd..868cd71  master     -&gt; origin/master
Updating 3b8a2dd..868cd71
Fast-forward
 TODO.md                              | 54 ------------------------------------
 autoload/EasyMotion.vim              | 17 ++++++++----
 autoload/EasyMotion/cmigemo.vim      |  1 -
 autoload/EasyMotion/command_line.vim |  1 -
 autoload/EasyMotion/helper.vim       |  1 -
 autoload/EasyMotion/highlight.vim    |  1 -
 plugin/EasyMotion.vim                |  4 +--
 t/easymotion_spec.vim                |  1 -
 t/operator_pending_spec.vim          |  1 -
 t/smartsign_spec.vim                 |  1 -
 10 files changed, 12 insertions(+), 70 deletions(-)
 delete mode 100644 TODO.md

vim-fugitive
remote: Counting objects: 4, done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 4 (delta 0), reused 2 (delta 0)
Unpacking objects: 100% (4/4), done.
From github.com:tpope/vim-fugitive
   90ee6fb..0374322  master     -&gt; origin/master
Updating 90ee6fb..0374322
Fast-forward
 plugin/fugitive.vim | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

vim-latex
Already up-to-date.

vim-markdown
remote: Counting objects: 119, done.
remote: Compressing objects: 100% (61/61), done.
remote: Total 119 (delta 59), reused 85 (delta 41)
Receiving objects:  64% (77/11
R)
Receiving objects: 100% (119/119), 25.96 KiB | 0 bytes/s, done.
Resolving deltas: 100% (59/59), done.
From git://github.com/plasticboy/vim-markdown
   9a3b312..74c9c60  master     -&gt; origin/master
Updating 9a3b312..74c9c60
Fast-forward
 .travis.yml            |  12 ++++
 CONTRIBUTING.md        |  10 +--
 README.md              |  72 ++++++++++++++++-----
 after/ftplugin/mkd.vim |   8 ---
 ftplugin/mkd.vim       |   5 +-
 indent/mkd.vim         |   3 +-
 syntax/mkd.vim         |  28 ++++++--
 test/README.md         |   7 ++
 test/indent.md         |  26 ++++++++
 test/run-tests.sh      |   3 +
 test/syntax.md         |  74 +++++++++++++++++++++-
 test/syntax.vader      | 169 +++++++++++++++++++++++++++++++++++++++++++++++++
 test/vimrc             |   8 +++
 13 files changed, 379 insertions(+), 46 deletions(-)
 create mode 100644 .travis.yml
 create mode 100644 test/README.md
 create mode 100644 test/indent.md
 create mode 100755 test/run-tests.sh
 create mode 100644 test/syntax.vader
 create mode 100644 test/vimrc

vim-misc
remote: Counting objects: 40, done.
remote: Compressing objects: 100% (23/23), done.
remote: Total 40 (delta 12), reused 30 (delta 9)
Unpacking objects: 100% (40/40), done.
From https://github.com/xolox/vim-misc
   6ce98ee..77b23c8  master     -&gt; origin/master
 * [new tag]         1.16.1     -&gt; 1.16.1
 * [new tag]         1.15.1     -&gt; 1.15.1
 * [new tag]         1.16       -&gt; 1.16
Updating 8551f2b..77b23c8
Fast-forward
 README.md                          | 357 ++++++++++++++++++++++++++++++-
 autoload/xolox/misc.vim            |   4 +-
 autoload/xolox/misc/async.vim      | 261 +++++++++++++++++++++++
 autoload/xolox/misc/complete.vim   |   8 +-
 autoload/xolox/misc/cursorhold.vim |  71 +++++++
 autoload/xolox/misc/path.vim       |  29 ++-
 autoload/xolox/misc/perm.vim       | 100 +++++++++
 autoload/xolox/misc/persist.vim    |  50 +++++
 autoload/xolox/misc/str.vim        |   7 +-
 autoload/xolox/misc/timer.vim      |  80 ++++++-
 doc/misc.txt                       | 424 +++++++++++++++++++++++++++++++++----
 plugin/xolox/misc.vim              |  19 ++
 12 files changed, 1342 insertions(+), 68 deletions(-)
 create mode 100644 autoload/xolox/misc/async.vim
 create mode 100644 autoload/xolox/misc/cursorhold.vim
 create mode 100644 autoload/xolox/misc/perm.vim
 create mode 100644 autoload/xolox/misc/persist.vim
 create mode 100644 plugin/xolox/misc.vim

vim-repeat
Already up-to-date.

vim-session~
remote: Counting objects: 8, done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 8 (delta 1), reused 5 (delta 1)
Unpacking objects: 100% (8/8), done.
From https://github.com/xolox/vim-session
   6773a22..4fb9cdd  master     -&gt; origin/master
 * [new tag]         2.7        -&gt; 2.7
Updating a55318b..4fb9cdd
Fast-forward
 README.md                              |  54 +++++++++++--
 autoload/xolox/session.vim             | 136 ++++++++++++++++++++-------------
 autoload/xolox/session/suggestions.vim |  42 ++++++++++
 doc/session.txt                        | 112 +++++++++++++++++++++------
 plugin/session.vim                     |  21 +++--
 5 files changed, 277 insertions(+), 88 deletions(-)
 create mode 100644 autoload/xolox/session/suggestions.vim

vim-snipmate
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 6 (delta 0), reused 2 (delta 0)
Unpacking objects: 100% (6/6), done.
From git://github.com/garbas/vim-snipmate
   f8aa804..e6eb057  master     -&gt; origin/master
Updating f8aa804..e6eb057
Fast-forward
 Contributors.md     | 1 +
 plugin/snipMate.vim | 4 ++++
 2 files changed, 5 insertions(+)

vim-snippets
remote: Counting objects: 290, done.
remote: Compressing objects: 100% (175/175), done.
remote: Total 290 (delta 177), reused 195 (delta 115)
Receiving objects:  80% (232
Receiving obj
Receiving objects: 100% (290/290), 67.94 KiB | 0 bytes/s, done.
Resolving deltas: 100% (177/177), done.
From git://github.com/honza/vim-snippets
   049934c..3216ac2  master     -&gt; origin/master
Updating 049934c..3216ac2
Fast-forward
 UltiSnips/c.snippets                              |   1 -
 UltiSnips/javascript_angular.snippets             |  46 +-
 UltiSnips/javascript_jsdoc.snippets               |   2 +-
 UltiSnips/pandoc.snippets                         |  11 +-
 UltiSnips/perl.snippets                           |   7 +
 UltiSnips/php.snippets                            |  79 +-
 UltiSnips/python.snippets                         |  48 +-
 UltiSnips/rust.snippets                           |  14 +-
 UltiSnips/scss.snippets                           |  22 +-
 UltiSnips/tex.snippets                            |   2 +-
 snippets/coffee/requirejs_coffee.snippets         |  11 +
 snippets/eruby.snippets                           |   2 +
 snippets/html.snippets                            |  45 +-
 snippets/javascript/javascript-requirejs.snippets |  14 +
 snippets/javascript/javascript.node.snippets      |   3 +-
 snippets/javascript/javascript.snippets           | 185 ++--
 snippets/perl.snippets                            |  10 +-
 snippets/rails.snippets                           |   2 +
 snippets/ruby.snippets                            |   6 +-
 snippets/rust.snippets                            |  14 +-
 snippets/scala.snippets                           |  19 +-
 snippets/stylus.snippets                          | 993 ++++++++++++++++++++++
 snippets/zsh.snippets                             |  12 +-
 23 files changed, 1403 insertions(+), 145 deletions(-)
 create mode 100644 snippets/coffee/requirejs_coffee.snippets
 create mode 100644 snippets/javascript/javascript-requirejs.snippets
 create mode 100644 snippets/stylus.snippets

vim-surround
Already up-to-date.

visualrepeat
Already up-to-date.
</code></pre>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Git Commits With fugitive.vim on Windows]]></title>
      <link href="http://vincenttam.github.io/blog/2014/09/03/git-commits-with-fugitive-dot-vim-on-windows/"/>
    
    <updated>2014-09-03T00:48:13+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/09/03/git-commits-with-fugitive-dot-vim-on-windows</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>In *nix, one can use <code>:Gcommit</code> to commit the staged changes,
provided that <a href="https://github.com/tpope/vim-fugitive" title="An awesome Git wrapper">fugitive.vim</a> has been installed.</p>

<h2 id="problem">Problem</h2>

<p>How can one use the Vim plugin <em>within</em> Vim on M$ Win*?</p>

<h2 id="discussion">Discussion</h2>

<p>Inspired by <a href="http://stackoverflow.com/a/19416705" title="GCommit doesn't work with fugitive.vim under windows xp?">a Stack Overflow question</a>, I set my
<code>core.editor</code> to <code>gvim -f</code> through <code>git config</code>.</p>

<p>Then I tried running <code>git commit</code> in 
<img class="nobd" src="/images/posts/OctopressOnOtherDev/gitbash1.png" title="‘icon’ ‘Git Bash icon’" >,
but it’s “aborting commit due to empty commit message”.</p>

<p>Why is the <code>-f</code> flag there?  It’s because the <code>--nofork</code> option causes
gVim to be in the foreground in *nix.  I’ve learnt this from <a href="https://help.github.com/articles/associating-text-editors-with-git" title="Associating text editors with Git">here</a>.
The <code>-w</code> flag in the commands for setting other editors as the default
editor for Git is the key for the above quoted message.</p>

<p>I tried to solve this problem by reading Vim’s offical manual about
<code>nofork</code>, and it’s clearly stated that this option <em>wasn’t</em> supported
in M$ Win* unless I’m “running it with an installed … gvim.bat”.</p>

<p>To conclude, if I’m working on M$ Win*, I’ll just forget about
<code>:Gcommit</code> in Vim, and use
<img class="nobd" src="/images/posts/OctopressOnOtherDev/gitbash1.png" title="‘icon’ ‘Git Bash icon’" >.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Clang Complete on Ubuntu 14.04]]></title>
      <link href="http://vincenttam.github.io/blog/2014/08/29/clang-complete-on-ubuntu-14-dot-04/"/>
    
    <updated>2014-08-29T13:44:03+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/08/29/clang-complete-on-ubuntu-14-dot-04</id>
    
      <content type="html"><![CDATA[<h2 id="problem">Problem</h2>

<p>Last night, when I tried to write a new file <code>hello.cpp</code>, I got the
following problem.</p>

<pre class="cliUB"><code>"hello.cpp" 8L, 105C
Loading libclang failed, completion won't be available. Are you sure '/usr/lib/'
 contains libclang?
/usr/lib//libclang.so: cannot open shared object file: No such file or direc
tory. To provide a path to libclang use Config.set_library_path() or Config.set_
library_file().

Press ENTER or type command to continue
</code></pre>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>I googled “loading libclang failed”, and skimmed two results.  The
first one was an clang complete issue on GitHub.<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup>  However, at
first glance, the problem was on Ubuntu <em>13.10, not 14.04</em>, and the
error messages <em>didn’t</em> resemble the above message.  The second one
was a Stack Overflow question.<sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup>  From the first answer, I knew that
I need to check if <code>libclang1</code> package was installed.  <code>dkpg -l | grep
clang</code> told me that I’d got clang.  I read the second answer, and
viewed the list of files in <code>/usr/lib/</code>.  There’s <em>no</em> folders whose
name started with <code>x86</code>, and <em>no</em> file called <code>libclang.so.1</code> in each
sub-folder.  Looking at the issue <em>again</em> on GitHub, I found out how
to make use of the information from both sites.</p>

<pre class="cliUB"><code>[root@localhost /usr/lib/]# ln -s /usr/lib/llvm-3.4/lib/libclang.so .
</code></pre>

<p>To avoid problems, I <em>didn’t</em> set Vim global variable
<code>clang_library_path</code>.</p>

<p>I <em>didn’t</em> know whether <code>.1</code> should be appended to the end of
<code>libclang.so</code>.  Finally, I <em>didn’t</em> do so, and the plugin just
<em>worked</em>.</p>

<hr />
<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>See clang complete <a href="https://github.com/Rip-Rip/clang_complete/issues/370">issue #370</a> for details. <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>See Stack Overflow <a href="http://stackoverflow.com/q/22733943" title="Where is libclang.so?">question 22733943</a> for details. <a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Search and Replace in Vim's Visual Mode]]></title>
      <link href="http://vincenttam.github.io/blog/2014/06/16/search-and-replace-in-vims-visual-mode/"/>
    
    <updated>2014-06-16T22:45:43+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/06/16/search-and-replace-in-vims-visual-mode</id>
    
      <content type="html"><![CDATA[<p>If you want to select some lines of text and search for a word to
replace in Vim, many users will do it like this:</p>

<ol>
  <li>Use <code>v</code> to do the selection.</li>
  <li>Press <code>:</code> to start inputting an editor command.</li>
  <li>Use <code>s/&lt;pat&gt;/&lt;text&gt;/g</code> to search and replace text.</li>
</ol>

<p>Observation: <code>:'&lt;,'&gt;s</code> “applies to whole lines”.<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup></p>

<p><strong>How about an arbitrary visual selection?</strong></p>

<p>According to a Vim tips found in the footnote, the answer is quite
simple—insert the <code>\%V</code> atom at the beginning of the search pattern.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>Search and replace in a visual selection—<a href="http://vim.wikia.com/wiki/Search_and_replace_in_a_visual_selection">Vim Tips Wiki</a> <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[A Vim Lover Page]]></title>
      <link href="http://vincenttam.github.io/blog/2014/03/02/a-vim-lover-page/"/>
    
    <updated>2014-03-02T14:39:20+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/03/02/a-vim-lover-page</id>
    
      <content type="html"><![CDATA[<p>I’ve found <a href="http://wiki.hotoo.me/Vim.html">a useful page</a> introducing
a Vim lover.  It consists of plenty of links to many useful resources.
Unfortunately, for Vim users who <em>can’t</em> understand Chinese, I’m not
sure if they can understand the contents of the page.  I hope Google
Translation can help.  Otherwise, they can also find some hyperlinks
which take them to other English websites.</p>

<!-- vim:set tw=70 wrap spell: -->
]]></content>
    
  </entry>
  
</feed>
