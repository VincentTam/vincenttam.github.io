<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Svg | Blog 1]]></title>
  <link href="https://vincenttam.github.io/blog/categories/svg/atom.xml" rel="self"/>
  <link href="https://vincenttam.github.io/"/>
  <updated>2016-02-10T00:46:09+08:00</updated>
  <id>https://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[W3C Validator and SVGPan]]></title>
      <link href="https://vincenttam.github.io/blog/2015/06/01/w3c-validator-and-svgpan/"/>
    
    <updated>2015-06-01T18:08:54+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/06/01/w3c-validator-and-svgpan</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>Similar to that of my recent post
<a href="/blog/2015/05/23/added-w3c-validated-logos-to-some-pages/"><em>Added <abbr title="World Wide Web Consortium">W3C</abbr> Validated Logos to Some Pages</em></a>—to get my SVG code
validated by <abbr title="World Wide Web Consortium">W3C</abbr>.</p>

<p>I’m now using <a href="https://www.cyberz.org/blog/2009/12/08/svgpan-a-javascript-svg-panzoomdrag-library/">SVGPan</a> for the zoom and drag functionality in SVG
images generated from PDF files which are generated by <code>xelatex</code> from
$\rm \LaTeX$ source code for <a href="http://www.texample.net/tikz/">TikZ</a> pictures.<sup id="fnref:pp_svgpan"><a href="#fn:pp_svgpan" class="footnote">1</a></sup></p>

<h2 id="problem">Problem</h2>

<p>I submited my SVG file to the <abbr title="World Wide Web Consortium">W3C</abbr>’s validator, which showed me one
error.  To illustrate this, I used an sample SVG in the official web
site of SVGPan as an example.</p>

<picture class="fancybox" title="SVGPan's SVG validation test result">
<source srcset="/images/posts/W3CSVG/err1292.png" media="(min-width: 1292px)" />
<source srcset="/images/posts/W3CSVG/err471.png" media="(min-width: 471px)" />
<img alt="SVGPan's SVG validation fails" src="https://vincenttam.github.io/images/posts/W3CSVG/err300.png" />
</picture>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>Googling for something likes “svg script type” helps.  As can be seen,
the last <code>&gt;</code> is underlined, so I guessed that this kind of
self-closing tags <em>wouldn’t</em> the test.  Just like HTML, change this to
<code>&lt;script ...&gt;&lt;/script&gt;</code>.  From what I’d seen online, I set the <code>type</code>
attribute to <code>text/ecmascript</code>, and luckily this <em>works</em>.</p>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>For valid SVG files which embed SVGPan, the following items are
necessary:</p>

<ol>
  <li>A type declaration at the very beginning</li>
  <li>A <code>&lt;script&gt;</code> tag with appropriate <code>xlink:href</code> and <code>type</code>
attributes.</li>
</ol>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:pp_svgpan">

      <p>Refer to <a href="/blog/2014/08/02/zooming-svg-in-web-browsers/"><em>Zooming SVG in Web Browsers</em></a> in <em>Blog 1</em> for
details. <a href="#fnref:pp_svgpan" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Fixed a JavaScript TypeError]]></title>
      <link href="https://vincenttam.github.io/blog/2015/06/01/fixed-a-javascript-typeerror/"/>
    
    <updated>2015-06-01T17:22:45+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/06/01/fixed-a-javascript-typeerror</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I included <a href="/blog/2015/04/11/an-image-with-changeable-size/">an image with changeable size</a> in a post written about
two months ago.</p>

<h3 id="howwhy-does-this-work">How/Why does this work?</h3>

<ul>
  <li>In brief: View <code>/javascripts/svg-resize-bar.js</code>.</li>
  <li>For details: click the hyperlink above.</li>
</ul>

<h2 id="problem">Problem</h2>

<picture class="fancybox" title="A error received from Firefox
  console">
  <source srcset="/images/posts/SVGResizeErr/null-bar558.png" media="(min-width: 558px)" />
  <img alt="FF throws TypeError" src="https://vincenttam.github.io/images/posts/SVGResizeErr/null-bar270.png" />
</picture>

<p>When I browsed any pages except that post which contains the
changeable SVG image, the above <code>TypeError</code> was thrown.</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>From the error message <code>TypeError: bar is null</code> and the filename
<code>svg-resize-bar.js</code> on the right, an ordinary user who knows how to
write if-else statements should be able to solve this in a few
seconds: surround the part <code>bar.onchange = function () { ... }</code> by the
if-else statement <code>if (bar != null ) { ... }</code>.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Validate HTML Code for SVG Fallbacks to Text]]></title>
      <link href="https://vincenttam.github.io/blog/2015/05/30/validate-html-code-for-svg-fallbacks-to-text/"/>
    
    <updated>2015-05-30T22:23:37+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/05/30/validate-html-code-for-svg-fallbacks-to-text</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>After I’d written <a href="/blog/2015/05/23/added-w3c-validated-logos-to-some-pages/"><em>Added <abbr title="World Wide Web Consortium">W3C</abbr> Validated Logos to Some Pages</em></a>, I
saw that in the site, there’s still two pages which <em>hadn’t</em> been
checked by the <abbr title="World Wide Web Consortium">W3C</abbr>’s validators.</p>

<h2 id="problem">Problem</h2>

<p>To allow SVG fallbacks to text, I viewed the source code for
<a href="http://www.w3schools.com/svg/tryit.asp?filename=trysvg_myfirst">the SVG example from W3Schools</a>.  The fallback message was
simply included inside a <code>&lt;svg&gt;</code> tag just like a <code>&lt;p&gt;</code> tag.  I applied
this technique to <code>source/downloads/code/SVGViewBox/viewBox1.html</code>.</p>

<p>Then I uploaded that HTML file to the <abbr title="World Wide Web Consortium">W3C</abbr>’s HTML validator, which
complained such an inclusion of text.</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>After that, I googled “svg fallback text” using the encrypted version
of the search engine.  Luckily, <a href="http://stackoverflow.com/a/26249728">the second answer</a> to the
Stack Overflow question, which appeared at the top of the list of
search results, is useful.</p>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>To get an HTML page which consists of a <code>&lt;foreignObject&gt;</code> tag inside
an <code>&lt;svg&gt;</code> tag validated by the <abbr title="World Wide Web Consortium">W3C</abbr> HTML validator, it’s obligatory to
specify the dimensions of the <code>&lt;foreignObject&gt;</code> tag.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[An Image With Changeable Size]]></title>
      <link href="https://vincenttam.github.io/blog/2015/04/11/an-image-with-changeable-size/"/>
    
    <updated>2015-04-11T17:14:23+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/04/11/an-image-with-changeable-size</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I sometimes upload pictures for illustrating ideas.  You may see
<a href="/blog/2015/03/28/two-diagrams-illustrating-the-isomorphism-extension-theorem/"><em>Two Diagrams Illustrating the Isomorphism Extension Theorem</em></a>
in this blog for example.</p>

<h2 id="motivation">Motivation</h2>

<p>Enable users to adjust the size of SVG graphics.</p>

<h2 id="problem">Problem</h2>

<p>In the linked post, if the zoom level is too <em>large</em>, then part of the
image will be hidden.</p>

<object type="image/svg+xml" class="boxed" data="/downloads/code/svgpan-1.2.2/IET.svg" width="200" height="200">
  Your browser does not support SVG
</object>

<p><a href="http://validator.w3.org/check?uri=https%3A%2F%2Fvincenttam.github.io%2Fdownloads%2Fcode%2Fsvgpan-1.2.2%2FIET.svg;ss=1"><img src="https://vincenttam.github.io/images/valid-svg11.png" alt="Valid SVG 1.1" height="31" width="88" />
</a></p>

<p>This is quite <em>inconvenient</em> for users who want a <em>whole</em> picture.</p>

<h2 id="goal">Goal</h2>

<p>To set up a slide bar which controls the size of an SVG image.</p>

<p><span>Image size:</span>
<input id="bar" type="range" name="points" min="200" max="800" value="200" step="10" />
<span id="lbl">200</span></p>

<object type="image/svg+xml" class="boxed" id="obj" data="/downloads/code/resizable/IET.svg" width="200" height="200">
  Your browser does not support SVG
</object>

<p><a href="http://validator.w3.org/check?uri=https%3A%2F%2Fvincenttam.github.io%2Fdownloads%2Fcode%2Fresizable%2FIET.svg;ss=1"><img src="https://vincenttam.github.io/images/valid-svg11.png" alt="Valid SVG 1.1" height="31" width="88" />
</a></p>

<!-- more -->

<h2 id="example">Example</h2>

<p>Click “download” to view the sample web page.</p>

<p>{% include_code A minimum working example resizable/test.html %}</p>

<h2 id="discussion">Discussion</h2>

<p>Initially, due to my laziness, I used the <em>same</em> SVG image as the one
in the section “Problem”.  Even though the height and width of the SVG
image were increased, the diagram <em>didn’t</em>.  Moreover, it’s
<em>inconvenient</em> to manually increase the size of the picture by <em>both</em>
adjusting the knob <em>and</em> moving the mouse wheel.  As a result, I
googled “html scale svg” and found a long article which I <em>didn’t</em>
really read.<sup id="fnref:ref"><a href="#fn:ref" class="footnote">1</a></sup>  I just saw the word “viewport” and realized that
the SVG image in the section “Problem” had been processed with steps
described in <a href="/blog/2014/08/02/zooming-svg-in-web-browsers/"><em>Zooming SVG in Web Browsers</em></a> for incorporating
the special functionalities of SVGPan in this blog.  Therefore,
generating the SVG file for the $\rm \LaTeX$ source code again, I
finally succeeded in getting the <em>contents</em> of the image enlarged.</p>

<hr />

<!-- Defer loading of JavaScripts -->
<script type="text/javascript" charset="utf-8">
(function() {
    function getScript(url,success){
        var script=document.createElement('script');
        script.src=url;
        var head=document.getElementsByTagName('head')[0],
        done=false;
        script.onload=script.onreadystatechange = function(){
        if ( !done && (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete') ) {
            done=true;
            success();
            script.onload = script.onreadystatechange = null;
            head.removeChild(script);
        }
        };
        head.appendChild(script);
    }

    getScript("{{ root_url }}/javascripts/svg-resize-bar.js",function() {});
})();
</script>

<div class="footnotes">
  <ol>
    <li id="fn:ref">

      <p><a href="http://css-tricks.com/scale-svg/">How to Scale SVG</a> by Amelia Bellamy-Royds on <em>CSS-Tricks</em>. <a href="#fnref:ref" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[After Reading About.com's Introduction to the SVG Viewbox]]></title>
      <link href="https://vincenttam.github.io/blog/2014/08/02/after-reading-about-dot-coms-introduction-to-the-svg-viewbox/"/>
    
    <updated>2014-08-02T20:30:22+08:00</updated>
    <id>https://vincenttam.github.io/blog/2014/08/02/after-reading-about-dot-coms-introduction-to-the-svg-viewbox</id>
    
      <content type="html"><![CDATA[<p>While I was testing <a href="http://www.cyberz.org/blog/2009/12/08/svgpan-a-javascript-svg-panzoomdrag-library/" title="SVGPan: a Javascript SVG (Viewer) Pan/Zoom/Drag library">SVGPan</a>, I saw the <code>viewBox</code> attribute.  I learnt
something from the first search result after googling “svg viewbox”.
It was an article introducing the SVG viewbox.  There’s <em>no</em> difficult
concepts in the guide, but I <em>can’t</em> understand it because of the
following claim.<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup></p>

<blockquote>
  <pre><code>&lt;svg width="800" height="400" viewBox="0 0 400 200"&gt;
</code></pre>

  <p>This view box covers half the page starting in the <strong>upper right
hand corner</strong>.</p>
</blockquote>

<p>I have investigated into this, and I’m dubious about this idea.  I’ll
illustrate my doubts using two examples.  Click “download” at the top
right-hand corner to view the result.</p>

<p>{% include_code My first example SVGViewBox/viewBox1.html %}</p>

<p>“The view box covers the entire page”, as expected.</p>

<p>{% include_code My second example SVGViewBox/viewBox2.html %}</p>

<p>This time, the view box only covers the top left-hand corner.</p>

<p>In addition, I’ve found out that changing <code>0 0 400 200</code> to <code>400 200 0 0</code>
<em>doesn’t</em> work.</p>

<hr />
<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>Ferrara, D. n.d. <em>Viewbox Attribute in SVG: Understanding the SVG Viewbox</em>. Retrieved from <a href="http://webdesign.about.com/od/svg/a/svg-viewbox-attribute.htm">http://webdesign.about.com/od/svg/a/svg-viewbox-attribute.htm</a> <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
