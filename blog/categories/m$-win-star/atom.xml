<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: M$ Win* | Blog 1]]></title>
  <link href="https://vincenttam.github.io/blog/categories/m$-win-star/atom.xml" rel="self"/>
  <link href="https://vincenttam.github.io/"/>
  <updated>2016-02-22T11:57:06+08:00</updated>
  <id>https://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Git for Windows, Curl, Gist.vim With Vundle (1)]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/22/git-for-windows-curl-gist-dot-vim-with-vundle-1/"/>
    
    <updated>2016-02-22T10:23:53+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/22/git-for-windows-curl-gist-dot-vim-with-vundle-1</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I installed msysgit 1.9.0, and added its bash utilities to <code>PATH</code>.</p>

<h2 id="problem">Problem</h2>

<p>I attempted to open an HTML file with <code>curl</code>.  However, I got the
following error.</p>

<pre class="cli"><code>C:\Windows\system32\cmd.exe /c (curl 'http://www.vim.org/index.html' -o 'C:/Temp
/PortableApps/gVimPortable/Data/Temp/VIA1ED5.html')
curl: (1) Protocol "'http" not supported or disabled in libcurl
shell returned 1
Hit any key to close this window...
</code></pre>

<h2 id="discussion">Discussion</h2>

<p>In the first line of the code block, <code>cmd.exe</code> with option <code>/c</code> ran
the command in the parenthesis <code>()</code>.  I copied the command inside <code>()</code>
and ran it in <code>cmd.exe</code>, and the error was reproduced.</p>

<p>It’s easy to find the cause of the problem.  I typed “curl protocol”
on the Google search web page, and the rest of the error message
appeared in the list of suggestions.  In the first search result,
which was <a href="http://stackoverflow.com/q/6684235">a Stack Overflow question</a>, I learnt why this
error occurred from the first answer—in the Command Prompt, one
needs to use double quotes <code>""</code> instead of single quotes <code>''</code>.  In Git
Bash, this <em>doesn’t</em> matter.</p>

<p>Since <code>curl</code> was bundled with msysgit, I suspected that the installed
version of Git was too old.  I then upgraded it.</p>

<h2 id="lessons-learnt">Lessons learnt</h2>

<ol>
  <li>For a shell program (e.g. Command Prompt, bash), the option <code>-c</code>
(or <code>/c</code>) stands for “command”, and what’s left is the command to
be run.</li>
  <li><code>curl</code> will grab content from the input URL and display it as
standard output.  To save the downloaded content in a file, the
flag <code>-o</code>, which means “output”, can be used.</li>
</ol>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Testing Octopress and Ruby 2.0 on Windows 7 (3)]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/22/testing-octopress-and-ruby-2-dot-0-on-windows-7-3/"/>
    
    <updated>2016-02-22T01:05:04+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/22/testing-octopress-and-ruby-2-dot-0-on-windows-7-3</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I was writing <a href="/blog/2016/02/21/miktex-update-2/">my previous post</a>, which was about my recent
Mik$\rm \TeX$ update.</p>

<h2 id="problem">Problem</h2>

<p>After having finished it, I tried <code>rake generate</code>, and got results
similar to the first picture of <a href="blog/2014/09/02/testing-octopress-and-ruby-2-dot-0-on-windows-7-1/">the first post in this series</a>.</p>

<p>Last time, I solved this problem by creating the batch file
<code>python2.bat</code> in the folder where Python had been installed (i.e.
<code>C:\Python27</code>).  This time, the BAT file is already there.  In (Git)
CMD, both <code>which python</code> and <code>which python2</code> are fine.  However, in
Git bash, I run into trouble.</p>

<pre class="cli"><code>Owner@Owner-PC MINGW64 /c/github/vincenttam.github.io (source)
$ which python
/c/Python27/python

Owner@Owner-PC MINGW64 /c/github/vincenttam.github.io (source)
$ which python2
which: no python2 in (/c/Users/Owner/bin:/mingw64/bin:/usr/local/bin:/usr/bin:/b
in:/mingw64/bin:/usr/bin:/c/Users/Owner/bin:/c/ProgramData/Oracle/Java/javapath:
/c/Perl/site/bin:/c/Perl/bin:/c/Program Files (x86)/Intel/iCLS Client:/c/Program
 Files/Intel/iCLS Client:/c/Windows/system32:/c/Windows:/c/Windows/System32/Wbem
:/c/Windows/System32/WindowsPowerShell/v1.0:/c/Program Files (x86)/Intel/OpenCL 
SDK/2.0/bin/x86:/c/Program Files (x86)/Intel/OpenCL SDK/2.0/bin/x64:/c/Program F
iles (x86)/Common Files/Roxio Shared/DLLShared:/c/Program Files (x86)/Common Fil
es/Roxio Shared/OEM/DLLShared:/c/Program Files (x86)/Common Files/Roxio Shared/O
EM/DLLShared:/c/Program Files (x86)/Common Files/Roxio Shared/OEM/12.0/DLLShared
:/c/Program Files (x86)/Roxio 2010/OEM/AudioCore:/c/Program Files/Intel/Intel(R)
 Management Engine Components/DAL:/c/Program Files/Intel/Intel(R) Management Eng
ine Components/IPT:/c/Program Files (x86)/Intel/Intel(R) Management Engine Compo
nents/DAL:/c/Program Files (x86)/Intel/Intel(R) Management Engine Components/IPT
:/c/Temp/MikTeXPortable/miktex/bin:/c/MinGW/bin:/c/Temp/gnuwin32/bin:/c/ctags58:
/c/Temp/PortableApps/gVimPortable:/c/cscope-15.8a-win32rev1-static:/c/Python27:/
c/Ruby200-x64/bin:/c/Temp/pdf2svg-0.2.2:/c/Program Files (x86)/Skype/Phone:/cmd:
/usr/bin/vendor_perl:/usr/bin/core_perl)

Owner@Owner-PC MINGW64 /c/github/vincenttam.github.io (source)
$ cd /c/Python27/

Owner@Owner-PC MINGW64 /c/Python27
$ ls
DLLs/     Lib/         NEWS.txt     pythonw.exe*  Tools/
Doc/      libs/        python.exe*  README.txt    w9xpopen.exe*
include/  LICENSE.txt  python2.bat  tcl/
</code></pre>

<p>Even though the generated contents can still be locally previewed,
<strong>how can I get rid of this error message?</strong></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>I googled “which no python2 in” (<em>with surrounding double quotes</em>),
and found one line in the post <a href="http://nathanielstory.com/2013/12/28/jekyll-on-windows-with-cygwin.html"><em>Jekyll on Windows With Cygwin</em></a>
written by Nathan Story very useful.  While reading his post, I
<em>didn’t</em> read it from the start.  Instead, I just searched for
“python2”, and quickly saw the <code>ln</code> command.</p>

<p>The file type of <code>python2</code> created by <code>ln</code> was <em>different</em> from what I
expected: <code>ls -l</code> <em>didn’t</em> show that <code>python2</code> was a symbolic link,
and <code>file</code> even said that it was an executable file.</p>

<pre class="cli"><code>Owner@Owner-PC MINGW64 /c/Python27
$ ln -s python.exe python2

Owner@Owner-PC MINGW64 /c/Python27
$ ls -l
total 677
drwxr-xr-x 1 Owner 197121      0 May 25  2014 DLLs/
drwxr-xr-x 1 Owner 197121      0 May 25  2014 Doc/
drwxr-xr-x 1 Owner 197121      0 May 25  2014 include/
drwxr-xr-x 1 Owner 197121      0 Oct  9  2014 Lib/
drwxr-xr-x 1 Owner 197121      0 May 25  2014 libs/
-rw-r--r-- 1 Owner 197121  38573 Nov 10  2013 LICENSE.txt
-rw-r--r-- 1 Owner 197121 375685 Nov 10  2013 NEWS.txt
-rwxr-xr-x 1 Owner 197121  26624 Nov 10  2013 python.exe*
-rwxr-xr-x 1 Owner 197121  26624 Nov 10  2013 python2*
-rw-r--r-- 1 Owner 197121     22 Aug 31  2014 python2.bat
-rwxr-xr-x 1 Owner 197121  27136 Nov 10  2013 pythonw.exe*
-rw-r--r-- 1 Owner 197121  55208 Oct 27  2013 README.txt
drwxr-xr-x 1 Owner 197121      0 May 25  2014 tcl/
drwxr-xr-x 1 Owner 197121      0 May 25  2014 Tools/
-rwxr-xr-x 1 Owner 197121  49664 Nov 10  2013 w9xpopen.exe*

Owner@Owner-PC MINGW64 /c/Python27
$ file python2
python2: PE32 executable (console) Intel 80386, for MS Windows
</code></pre>

<p>Finally, <code>rake</code> <em>doesn’t</em> give me strange output.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Mik$\rm \TeX$ Update (2)]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/21/miktex-update-2/"/>
    
    <updated>2016-02-21T22:37:20+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/21/miktex-update-2</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I need to write something in $\rm \LaTeX$.</p>

<h2 id="problem">Problem</h2>

<p>I <em>can’t</em> get any update by clicking “Update Mik$\rm \TeX$” in the
icon triggered by <code>miktex-portable.cmd</code>.  I faced the same problem as
<a href="http://tex.stackexchange.com/q/251242">rantrave’s</a>.</p>

<!-- more -->

<h2 id="discussion">Discussion</h2>

<p>If one urgently needs to get the updated version of a particular
package, one may directly download the LZMA file.<sup id="fnref:pp1"><a href="#fn:pp1" class="footnote">1</a></sup>  Actually, the
remote package repositories are still <em>online</em>.  I guess the problem
is in Mik$\rm \TeX$ update tool.  Anyways, I am still grateful for the
effort of its developers.</p>

<h2 id="resolution">Resolution</h2>

<p>The easiest way is to sit there and <em>wait for a day</em>.  Then the
problem will be <em>gone</em>.  It is possible that some difficulties occur,
but they can be overcome.</p>

<picture class="fancybox" title="Windows API error 145">
  <source srcset="/images/posts/MikTeXUpdate2/api-err.png" media="(min-width: 460px)" />
  <img alt="Windows API error 145" width="300" src="https://vincenttam.github.io/images/posts/MikTeXUpdate2/api-err.png" />
</picture>

<p>{% include_code I clicked “Copy Info” and got this. lang:text miktex-update2/err-2016-02-22-22-00.txt %}</p>

<p>From <a href="/blog/2015/06/09/miktex-update/"><em>Mik$\rm \LaTeX$ Update</em></a>, I know that only the “Update
Mik$\rm \TeX$” in the menu triggered by clicking the small icon will
work.  The update wizard inside the big window for the package manager
<em>won’t</em>.</p>

<p>Sometimes, the chosen remote package repository can fail.  In this
case, just click the button and search for another one.</p>

<p>{% include_code An example of failed update. lang:text miktex-update2/update-2016-02-21-20-19.txt %}</p>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>When there’s nothing can be done, then one needs the mind of
non-action or non-being.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:pp1">

      <p>For example, the situation described in
<a href="/blog/2015/06/09/miktex-update/"><em>Mik$\rm \LaTeX$ Update</em></a>. <a href="#fnref:pp1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Git Object ID Generation (5): Predict ID]]></title>
      <link href="https://vincenttam.github.io/blog/2015/08/11/git-object-id-generation-5-predict-id/"/>
    
    <updated>2015-08-11T10:52:56+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/08/11/git-object-id-generation-5-predict-id</id>
    
      <content type="html"><![CDATA[<h2 id="goal">Goal</h2>

<p>The method for getting the Git object ID described in
<a href="/blog/2015/08/07/git-object-id-generation-4-general-trees/">previous post in this series</a> <em>isn’t</em> quick enough since it
consists of <em>several</em> commands.</p>

<h2 id="the-one-line-command">The one-line command</h2>

<h3 id="objects-with-known-git-id">Objects with known Git ID</h3>

<pre class="cliUB"><code>$ (printf "{obj_type} $(git cat-file -s {hash})\0" &amp;&amp; git cat-file {obj_type} {h
ash}) | shasum
</code></pre>

<ul>
  <li><code>{obj_type}</code> can be <code>blob</code>, <code>tree</code>, <code>commit</code> or <code>tag</code>.</li>
  <li><code>{hash}</code> is the SHA-1 hash of the object.</li>
</ul>

<p>Then the output SHA-1 hash should be the <em>same</em> as the input <code>{hash}</code>.</p>

<h3 id="predict-git-object-ids">Predict Git object IDs</h3>
<p>Hence, we can modify the above command to predict the Git object ID of
a <code>{file}</code>.</p>

<pre class="cliUB"><code>$ (printf "{obj_type} $(wc -c {file} | tr -dc '0-9')\0" &amp;&amp; cat {file}) | shasum
</code></pre>

<p>In order to verify the result for files, one can quickly get the blob
ID from Git by <code>git log -1 -p -- {file}</code>.</p>

<h2 id="facts-learnt">Facts learnt</h2>

<h3 id="extract-numbers-from-a-string-in-bash">Extract numbers from a string in bash</h3>

<p>I typed “linux extract number” on Google, and the autocompletion gave
me “from string”.  I finally saw two commands for doing this.</p>

<ol>
  <li><code>sed 's/[^0-9]//g'</code></li>
  <li><code>tr -dc '0-9'</code></li>
</ol>

<p>In my opinion, the later is simpler.  The <code>-c</code> flag takes the
complement of the characters marked by <code>-d</code>.</p>

<h3 id="using-cat-on-m-win">Using cat on M$ Win*</h3>

<p>Using the command in the section “Predict Git object IDs” gives users
a <em>wrong</em> SHA-1 sum.  The reason is that M$ Win* uses <code>\r\n</code> instead
of <code>\n</code> for starting newlines.  This also results in the <em>incorrect</em>
byte count of the files with <code>\r\n</code> as the line terminator in that
command.  Thus, the extra <code>\r</code> needs to be deleted with <code>tr -d '\r'</code>.</p>

<h3 id="using-git-for-win">Using Git for Win*</h3>

<p>For the installed version of Git on M$ Win*, one needs to use
<code>sha1sum</code> instead of <code>shasum</code>.  Otherwise, Git Bash will complain that
it is “Unable to find Digest::SHA or Digest::SHA::PurePerl”.</p>

<h3 id="using-gitportable-on-m-win">Using GitPortable on M$ Win*</h3>

<p>Since one <em>can’t</em> even issue the command <code>sha1sum</code>, use <code>openssl sha1</code>
instead.  (Omitting the trailing <code>1</code> will result in a <em>very different</em>
hexadecimal number.)</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Mik$\rm \TeX$ Update]]></title>
      <link href="https://vincenttam.github.io/blog/2015/06/09/miktex-update/"/>
    
    <updated>2015-06-09T16:41:12+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/06/09/miktex-update</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>This morning, I tried typing the chemical symbol of carbon dioxide
(CO<sub>2</sub>) in $\rm \LaTeX$, but I <em>wouldn’t</em> like to use
<code>\mathrm</code> in math mode — first, I changed from text mode to math
mode, then in order to type normal font, I used <code>\mathrm</code> to change it
back to “text mode in math mode”.  I did all of these for a little
subscript only.  Clearly, that’s <em>not</em> an elegant way of typesetting
CO<sub>2</sub>.  It <em>didn’t</em> took me long to find out that what I
needed was the package <a href="https://www.ctan.org/pkg/mhchem"><code>mhchem</code></a>.</p>

<h2 id="problem">Problem</h2>

<p>I tried to <code>\usepackage[version=3]{mhchem}</code>, but Mik$\rm \TeX$
complained that the installed version of <code>l3kernel</code> was too <em>old</em>.  As
a result, I opened the package manager, and called the “Update Wizard”
inside.</p>

<picture class="fancybox" title="No update helper found">
  <source srcset="/images/posts/MikTeXUpdate/no-helper460.png" media="(min-width: 460px)" />
  <img alt="update helper disappered?" src="https://vincenttam.github.io/images/posts/MikTeXUpdate/no-helper300.png" />
</picture>

<p><strong>How can I get the packages updated <em>without</em> manually creating
another folder?</strong></p>

<!-- more -->

<h2 id="discussion">Discussion</h2>

<p>I first clicked “Repository” and then “Synchronize”, but it loaded
slowly, and I finally got <em>nothing</em>.  Then I tried to “Change package
repository”.  I randomly selected an item in the list of remote
package repository, and clicked “Synchronize” again.  What I saw was
still the same.</p>

<p>Then I decided <em>not</em> to include the <code>mhchem</code> package.  I restored the
<code>\ce{CO2}</code> back to <code>CO2</code>, and then I pressed <code>\ll</code> in
<a href="http://vim-latex.sourceforge.net/">$\rm \LaTeX$-Suite</a>.<sup id="fnref:ll"><a href="#fn:ll" class="footnote">1</a></sup>  Then I received <em>unexpected
errors</em> from the $\rm \LaTeX$ compiler.  I then compiled another
document which contained characters with accents, such as ‘à’, ‘é’,
‘ï’, …  I received the same error message in the quickfix window as
well.  Since it’s gone, I’ve retrieved the message from the
corresponding LOG file.<sup id="fnref:log"><a href="#fn:log" class="footnote">2</a></sup></p>

<pre class="cli"><code>(C:\Temp\MikTeXPortable\tex\latex\fontspec\fontspec.cfg)))
(C:\Temp\MikTeXPortable\tex\generic\babel\babel.sty
Package: babel 2008/07/08 v3.8m The Babel package

*************************************
* Local config file bblopts.cfg used
*
(C:\Temp\MikTeXPortable\tex\latex\00miktex\bblopts.cfg
File: bblopts.cfg 2006/07/31 v1.0 MiKTeX 'babel' configuration
)
(C:\Temp\MikTeXPortable\tex\latex\babel-french\frenchb.ldf
Language: frenchb 2015/05/31 v3.1f French support from the babel system

(C:\Temp\MikTeXPortable\tex\generic\babel\babel.def
File: babel.def 2008/07/08 v3.8m Babel common definitions
\babel@savecnt=\count123
\U@D=\dimen139
)

<span class="err">! Package frenchb.ldf Error: frenchb requires babel v.3.9i.
(frenchb.ldf)                Aborting here.</span>

See the frenchb.ldf package documentation for explanation.
Type  H &lt;return&gt;  for immediate help.
 ...

l.116          {Please upgrade Babel!}

<span class="HLCode">Please upgrade Babel!</span>
</code></pre>

<h2 id="a-nearly-successful-update">A nearly successful update</h2>

<p>From Google, I’ve learnt to “Update MikTeX” directly from the little
icon at the lower right-hand corner of the screen.  Then I directly
clicked the “Next &gt;” button, and Mik$\rm \TeX$ tried connecting the
manually chosen remote.  Unluckily, this <em>failed</em> and I got an error
mesage like <em>Permission denied</em>.  I tried searching “miktex permission
denied” on Google, but I <em>didn’t</em> understand what I’d found.</p>

<h2 id="solution">Solution</h2>

<p>As shown in the screenshot below, I checked the first two radio
buttons so as to get updated packages from the nearest package
repository.</p>

<picture class="fancybox" title="Update MikTeX packages">
  <source srcset="/images/posts/MikTeXUpdate/update513.png" media="(min-width: 513px)" />
  <img alt="update miktex packages" src="https://vincenttam.github.io/images/posts/MikTeXUpdate/update300.png" />
</picture>

<p>After clicking “Next &gt;”, things went smooth luckily.</p>

<picture class="fancybox" title="Downloading updates from remotes">
  <source srcset="/images/posts/MikTeXUpdate/download513.jpg" media="(min-width: 513px)" />
  <img alt="miktex package updates downloading" src="https://vincenttam.github.io/images/posts/MikTeXUpdate/download300.jpg" />
</picture>

<p>After the update had completed, the <code>babel</code> package had been upgraded
from version 3.8 to 3.9i.  With the correct syntax, I could finally
use <code>babel</code> and <code>mhchem</code>.</p>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>I often forget the command for optimizing JPEG images.  This evening,
while I was writing this post, I googled “jpegtran command”, and I
issued</p>

<pre class="cli"><code>jpegtran -optimize input.jpg &gt; output.jpg
</code></pre>

<p>after I’d read the command example from <a href="http://junalontherun.com/2009/07/15/optimize-all-jpeg-images-with-jpegtran-utility/">this page</a>.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:ll">

      <p><code>\ll</code> is the default keystroke for compiling a PDF document from
the $\rm \LaTeX$ source code in $\rm \LaTeX$-Suite, which is a
<a href="http://www.vim.org">Vim</a> plugin for writing in $\rm \LaTeX$ efficiently. <a href="#fnref:ll" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:log">

      <p>You may view the complete LOG file <a href="/downloads/1eDoc.log">here</a>. <a href="#fnref:log" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
