<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: M$ Win* | Blog 1]]></title>
  <link href="https://vincenttam.github.io/blog/categories/m$-win-star/atom.xml" rel="self"/>
  <link href="https://vincenttam.github.io/"/>
  <updated>2016-03-14T23:07:01+08:00</updated>
  <id>https://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Adobe Reader Has Stopped Working]]></title>
      <link href="https://vincenttam.github.io/blog/2016/03/14/adobe-reader-has-stopped-working/"/>
    
    <updated>2016-03-14T22:01:45+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/03/14/adobe-reader-has-stopped-working</id>
    
      <content type="html"><![CDATA[<h2 id="problem">Problem</h2>

<p>I opened Adobe Reader on a M$ Win* 7 desktop in a library so as to
print a PDF file.  I <em>couldn’t</em> understand why this window kept
popping up.</p>

<picture class="fancybox" title="Adobe RdrCEF has stopped working">
  <source srcset="/images/posts/AdbRdr/RdrCEF.png" media="(min-width: 525px)" /> 
  <img alt="Adobe RdrCEF has stopped working" width="300" src="https://vincenttam.github.io/images/posts/AdbRdr/RdrCEF.png" />
</picture>

<h2 id="result">Result</h2>

<p>Lacking time, I <em>won’t</em> find a solution for this problem.</p>

<p>If I choose to ignore this window, then the printing job can still be
carried out.  Therefore, I just waited until the document was printed.
Then I closed Adobe Reader.</p>

<h2 id="remarks">Remarks</h2>

<p>I choose Sumatra PDF since it is licensed under <abbr title="General Public License">GPL</abbr>.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Missing OS]]></title>
      <link href="https://vincenttam.github.io/blog/2016/03/12/missing-os/"/>
    
    <updated>2016-03-12T20:53:42+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/03/12/missing-os</id>
    
      <content type="html"><![CDATA[<p>I saw this error on a M$ Win* 7 machine.  If I were the
administrator, I would install GNU/Linux into that computer so that
a free and reliable operating system can be found inside.</p>

<picture class="fancybox" title="Missing Operating System">
  <source srcset="/images/posts/BoD/20160312-153126.jpg" media="(min-width: 400px)" /> 
  <img alt="Missing Operating System" width="300" src="https://vincenttam.github.io/images/posts/BoD/20160312-153126.jpg" />
</picture>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Git for Windows, Curl, Gist.vim With Vundle (5)]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/29/git-for-windows-curl-gist-dot-vim-with-vundle-5/"/>
    
    <updated>2016-02-29T00:35:30+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/29/git-for-windows-curl-gist-dot-vim-with-vundle-5</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>In <a href="/blog/2016/02/22/git-for-windows-curl-gist-dot-vim-with-vundle-3/">the third post of this series</a>, I ran the editor command</p>

<pre class="cli"><code>:!git config --list
</code></pre>

<p>inside <a href="http://portableapps.com/apps/development/gvim_portable">GVim Portable</a>, but I got a fatal error.  I
found out how to get <a href="https://github.com/mattn/gist-vim">Gist.vim</a> work <em>without</em> solving this problem.</p>

<h2 id="problem">Problem</h2>

<p><strong>How to avoid this fatal error?</strong></p>

<pre class="cli"><code>C:\Windows\system32\cmd.exe /c (git config --global --list)
fatal: unable to read config file 'C:\Temp\PortableApps\gVimPortable\Data\settin
gs/.gitconfig': No such file or directory
shell returned 128
Hit any key to close this window...
</code></pre>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>I forgot <a href="http://polymerhk.com/articles/2016/02/03/27363/">this article about programming</a> that I’d read several
weeks ago.  I should have pay more attention of the error message
itself, rather than the Google search results of this message.  Hence,
creating a symbolic link for <code>C:\Users\foo\.gitignore</code> to the
<code>path/to/Data/settings</code> folder.</p>

<h2 id="remarks">Remarks</h2>

<p>While writing this post, I re-read
<a href="/blog/2016/02/09/rake-aborted-due-to-a-vim-swap-file/"><em>Rake Aborted Due to a Vim Swap File</em></a> so as to find the URL of
the article about programming.  I discovered a broken link in the
GitHub page for <a href="https://github.com/imathis/octopress/issues/600#issuecomment-6206116">Octopress issue #600</a>.  From the list of
branches in the homepage for this GitHub project, I found <code>site-2.1</code>,
on which commit <a href="https://github.com/imathis/octopress/commit/2399008">2399008</a> was located.  Therefore, I made commit
<a href="https://github.com/VincentTam/vincenttam.github.io/commit/68b0adb">68b0adb</a> in the repository for this blog.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Another Blue Screen Windows 7]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/25/another-blue-screen-windows-7/"/>
    
    <updated>2016-02-25T22:41:06+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/25/another-blue-screen-windows-7</id>
    
      <content type="html"><![CDATA[<p>I saw a monitor which displayed the notorious blue screen of death
this evening.  Since I <em>don’t</em> know how to find out the reason of the
problem from the coredump, I use <a href="http://www.ubuntu.com/">Ubuntu</a>.</p>

<picture class="fancybox" title="A Windows 7 Blue Screen">
  <source srcset="/images/posts/BoD/20160225-185456.jpg" media="(min-width: 400px)" /> 
  <img alt="Win 7 BoD" width="300" src="https://vincenttam.github.io/images/posts/BoD/20160225-185456.jpg" />
</picture>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Git for Windows, Curl, Gist.vim With Vundle (4)]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/22/git-for-windows-curl-gist-dot-vim-with-vundle-4/"/>
    
    <updated>2016-02-22T18:38:00+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/22/git-for-windows-curl-gist-dot-vim-with-vundle-4</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>In <a href="/blog/2016/02/22/git-for-windows-curl-gist-dot-vim-with-vundle-2/">the second post in this series</a>, we see that the space in the
path of Git Bash can become a source of trouble.</p>

<h2 id="problem">Problem</h2>

<p><strong>How to run external commands in GVim Portable invoked by Git Bash?</strong></p>

<!-- more -->

<h2 id="a-failed-attempt">A failed attempt</h2>

<p>I googled “vim shell path program files”, and clicked
<a href="http://stackoverflow.com/a/13917410">the first web site</a> as usual.  Even though I <em>don’t</em>, and
<em>won’t</em> have Cygwin installed in my computer, I still viewed this
page, which suggested that the path of <code>shell</code> option should be
surrounded by a pair of double quotes <code>""</code>.  I tried this, but the
above problem <em>wasn’t</em> solved.</p>

<h2 id="solution">Solution</h2>

<p>I recalled that after opening the built-in editor in Command Prompt on
M$ Win* Professional/Enterprise, the displayed path of the working
directory would be different: some tildes appear in the path.</p>

<p>Therefore, I googled “windows path without spaces”, and learnt to use
<code>DIR /X</code> in Command Prompt to <a href="https://goo.gl/a9eHZF">solve this problem</a> from an
answer to <a href="http://superuser.com/a/179450">this Super User question</a>.  Finally, usual
external commands like <code>ls</code> and <code>file</code> can be executed inside GVim
Portable.  This solves the error mentioned in the “Discussion” section
of <a href="/blog/2016/02/22/git-for-windows-curl-gist-dot-vim-with-vundle-2/">the second post in this series</a>.  What I’ve wriiten in the
“Solution” section can be updated: I expect that under usual
circumstances, the external commands can be run even if the <code>shell</code>
option is set to Git Bash.</p>

<h2 id="remarks">Remarks</h2>

<p>I used an <code>if</code> statement to surround the <code>set shell=/path/to/bash.exe</code>
because <a href="http://stackoverflow.com/a/13917410">the same Stack Overflow answer</a> mentioned in the
“A failed attempt” section said that many Vim plugins used
<code>has("win32")</code>.  If a plugin failed in a GVim window triggered by Git
Bash, I can still use it by opening GVim with Command Prompt.</p>

<p>Now, though using <code>curl</code> in GVim whose <code>shell</code> is configured to
<code>cmd.exe</code>, I can finally use <code>curl</code> in GVim invoked by Git Bash.</p>

]]></content>
    
  </entry>
  
</feed>
