<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | Blog 1]]></title>
  <link href="https://vincenttam.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="https://vincenttam.github.io/"/>
  <updated>2015-08-07T17:08:53+08:00</updated>
  <id>https://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Git Object ID Generation (1): Blobs and Commits]]></title>
      <link href="https://vincenttam.github.io/blog/2015/08/07/git-object-id-generation-1-blobs-and-commits/"/>
    
    <updated>2015-08-07T13:52:47+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/08/07/git-object-id-generation-1-blobs-and-commits</id>
    
      <content type="html"><![CDATA[<p>The SHA-1 hash for blobs <em>isn’t</em> so hard to generate, and the process
is now well-known.  I <em>don’t</em> repeat it here.  The one for commits can
be similarly generated.</p>

<!-- more -->

<p>For example, <code>5b7b566b8a07d4813ba9f08a326e169cf38ca20f</code> is a hash of
the repository of this blog.</p>

<pre class="cliUB"><code>$ git rev-parse HEAD
5b7b566b8a07d4813ba9f08a326e169cf38ca20f
$ git cat-file -p 5b7b566b8a07d4813ba9f08a326e169cf38ca20f | tee test.txt
tree 2d864bcb7e4944e9d98b663649c79084692873c1
parent afcb4d97cb447112bd2e930159966d92b8e4754a
author Vincent Tam &lt;sere@live.hk&gt; 1438859683 +0800
committer Vincent Tam &lt;sere@live.hk&gt; 1438864942 +0800

A new post on some Git low level commands

I *don't* go over the details of the book *Pro Git*, which is available
online.  I just select some important ones for quick reference.
$ wc -c test.txt
379 test.txt
$ printf "commit 379\0" &gt; len.txt
$ cat len.txt test.txt | shasum
5b7b566b8a07d4813ba9f08a326e169cf38ca20f  -
</code></pre>

<p>We get the <em>same</em> SHA-1 hash.  Therefore, the ID for Git commit
objects is just the SHA-1 hash of the contents of the Git commits with
the string “commit {len}\0” inserted at the beginning, where <code>{len}</code>
stands for the number of bytes of the Git commit object (which is
stored in <code>test.txt</code> in the above situation).</p>

<h2 id="facts-learnt">Facts learnt</h2>

<h3 id="the-printf-command">The printf command</h3>

<p>The commands <code>printf "\0"</code> and <code>printf "\000"</code> <em>doesn’t</em> differ.
Therefore, if a digit zero follows the null character, one may
indicate the null character using hex digits: <code>printf "\x000"</code>.
<code>printf</code> will interpret <code>\x00</code> as a null character and the trailing
digit <code>0</code> <em>won’t</em> be mixed up with the characters on its left.</p>

<h3 id="the-wc-command">The wc command</h3>

<p>Apart from counting words, the <code>wc</code> command provide various flags
which return the number of lines, characters, etc.  In the past, I
knew three flags only: <code>-l</code>, <code>-w</code>, and <code>-c</code>.  I thought that they told
<code>wc</code> to count the number of <strong>l</strong>ines, <strong>w</strong>ords and <strong>c</strong>haracters
respectively.  After running the <code>wc</code> command on strings that include
accents (e.g. “café”, “resumé”, etc), I realised that I misunderstood
the function of the <code>-c</code> flag, which actually counts the number of
<em>bytes</em> of the input.  To count the number of characters, use the <code>-m</code>
flag instead.</p>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[My Git Command List (3)]]></title>
      <link href="https://vincenttam.github.io/blog/2015/08/06/my-git-command-list-3/"/>
    
    <updated>2015-08-06T17:39:08+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/08/06/my-git-command-list-3</id>
    
      <content type="html"><![CDATA[<h2 id="overview">Overview</h2>

<p>Unlike the Git commands found on the previous posts in this series, in
this article, I’ll focus on <em>low-level</em> Git commands.</p>

<h2 id="raison-dtre">Raison d’être</h2>

<p>Usually, one <em>won’t</em> use low-level Git commands in a Git repository,
but I included them here because these commands help one understand
the <a href="https://git-scm.com/book/en/v2/Git-Internals-Git-Objects">Git object model</a>.</p>

<h2 id="the-list">The list</h2>

<pre class="cliUB"><code>$ find .git/objects       # Return all files/folders under `.git/objects'
$ git cat-file -p {hash}  # Print the content to which {hash} corresponds
$ git hash-object {file}  # Return the hash of {file}
$ git hash-object --stdin # Return the hash of the standard input
$ git write-tree          # Return the hash of the tree of tracked contents
$ git ls-files -s         # List all tracked files and their hash
$ git ls-tree {hash}      # List the contents of a tree
$ git rev-parse {hash}    # Return the full SHA-1 of {hash}
$ git rev-parse HEAD      # Return the full SHA-1 of HEAD
$ git diff                # Show changes not staged for commit
$ git diff --cache        # Show changes staged for commit
</code></pre>

<p>It <em>isn’t</em> necessary to supply the full SHA-1 hash for
<code>{hash}</code>—several hex digits at the beginning will be enough.</p>

<h2 id="facts-learnt">Facts learnt</h2>

<ol>
  <li>An SHA-1 hash has 160 bits.  Since 1 byte is equal 8 bit, it has 20
bytes.  When it’s displayed, it has 40 hex-digits.</li>
  <li><em>The blob for a file is independent of the file name</em>, which was
actually stored in a tree object.  For example, the object ID of a
file which contains only a single line “hello world” is
3b18e512dba79e4c8300dd08aeb37f8e728b8dad, so if the file is stored
inside the <code>.git</code> directory as a blob, the blob will be named as
<code>.git/objects/3b/18e512dba79e4c8300dd08aeb37f8e728b8dad</code>.</li>
  <li>If a sub-directory is created in the <code>dir</code> directory, then a <code>tree</code>
entry will be created in the tree object corresponding to
<code>dir</code>.<sup id="fnref:tree_obj"><a href="#fn:tree_obj" class="footnote">1</a></sup></li>
</ol>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:tree_obj">

      <p>See the code blocks and the picture in “<a href="https://git-scm.com/book/en/v2/Git-Internals-Git-Objects#Tree-Objects">Tree Objects</a>”
in Section 10.2 “Git Objects” of <em>Pro Git</em> a concrete example of a
<code>tree</code> entry inside a tree object. <a href="#fnref:tree_obj" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[An Up-to-date Git on Ubuntu]]></title>
      <link href="https://vincenttam.github.io/blog/2014/12/21/an-up-to-date-git-on-ubuntu/"/>
    
    <updated>2014-12-21T01:03:49+08:00</updated>
    <id>https://vincenttam.github.io/blog/2014/12/21/an-up-to-date-git-on-ubuntu</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>Tonight, I read the most recent blog article on
<a href="https://github.com/blog">GitHub’s blog</a>.<sup id="fnref:post"><a href="#fn:post" class="footnote">1</a></sup>  It says that the version of Git Bash
on my M$ Win* 7 is <em>unsafe</em>.  Moreover, it is claimed that
<a href="https://www.gnu.org/gnu/linux-and-gnu.en.html">GNU/Linux</a> computers <em>aren’t</em> affected since they’re case
sensitive.  At first, I believed that I <em>didn’t</em> need to upgrade my
<a href="http://git-scm.com/">Git</a>.  However, after I clicked the link for the announcement of Git
v2.2.1, I checked the version of the <a href="http://git-scm.com/">Git</a> on <a href="http://www.ubuntu.com">Ubuntu</a>, and found out
that it <em>wasn’t</em> the newest one.  The following paragraph convinced me
to get this update on my Ubuntu desktop.</p>

<p><blockquote><p>Even though the issue may not affect Linux users, if you are a hosting service whose users may fetch from your service to Windows or Mac OS X machines, you are strongly encouraged to update to protect such users who use existing versions of Git.</p><footer><strong>Junio C Hamano</strong> <cite><a href='http://article.gmane.org/gmane.linux.kernel/1853266'>[ANNOUNCE] Git v2.2.1 (and Updates to Older Maintenance Tracks)</a></cite></footer></blockquote></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>Add the <abbr title="Personal Package Archive">PPA</abbr> for <a href="http://git-scm.com/">Git</a>.</p>

<pre class="cliUB"><code>$ sudo add-apt-repository ppa:git-core/ppa
[sudo] password for owner:
 The most current stable version of Git for Ubuntu.

For release candidates, go to https://launchpad.net/~git-core/+archive/candidate .
  More info: https://launchpad.net/~git-core/+archive/ubuntu/ppa
Press [ENTER] to continue or Ctrl-C to cancel adding it

gpg: keyring `/tmp/tmplo3t2ozz/secring.gpg' created
gpg: keyring `/tmp/tmplo3t2ozz/pubring.gpg' created
gpg: requesting key E1DF1F24 from hkp server keyserver.ubuntu.com
gpg: /tmp/tmplo3t2ozz/trustdb.gpg: trustdb created
gpg: key E1DF1F24: public key "Launchpad PPA for Ubuntu Git Maintainers" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
OK
</code></pre>

<p>Update the package information and upgrade the file.</p>

<pre class="cliUB"><code>$ sudo apt-get upgrade
Reading package lists... Done
Building dependency tree
Reading state information... Done
Calculating upgrade... Done
The following packages will be upgraded:
  git git-core git-man gitk
4 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 5,604 kB of archives.
After this operation, 1,528 kB of additional disk space will be used.
Do you want to continue? [Y/n] Y
Get:1 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main gitk all 1:2.2.1-0ppa2~ubuntu14.04.1 [704 kB]
Get:2 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git i386 1:2.2.1-0ppa2~ubuntu14.04.1 [3,601 kB]
Get:3 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git-man all 1:2.2.1-0ppa2~ubuntu14.04.1 [1,298 kB]
Get:4 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git-core all 1:2.2.1-0ppa2~ubuntu14.04.1 [1,412 B]
Fetched 5,604 kB in 23s (240 kB/s)
(Reading database ... 380182 files and directories currently installed.)
Preparing to unpack .../gitk_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking gitk (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git_1%3a2.2.1-0ppa2~ubuntu14.04.1_i386.deb ...
Unpacking git (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git-man_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking git-man (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git-core_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking git-core (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
Setting up git-man (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up git (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up gitk (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up git-core (1:2.2.1-0ppa2~ubuntu14.04.1) ...
</code></pre>

<p>Now, I’ve the newest stable release of <a href="http://git-scm.com/">Git</a>.</p>

<pre class="cliUB"><code>$ git --version
git version 2.2.1
</code></pre>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:post">

      <p><a href="http://article.gmane.org/gmane.linux.kernel/1853266"><em>Vulnerability announced: update your Git clients</em></a> by
Vicent Marti. <a href="#fnref:post" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Compressed Git Repository for This Site]]></title>
      <link href="https://vincenttam.github.io/blog/2014/12/13/compressed-git-repository-for-this-site/"/>
    
    <updated>2014-12-13T16:39:09+08:00</updated>
    <id>https://vincenttam.github.io/blog/2014/12/13/compressed-git-repository-for-this-site</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I’ve uploaded nearly 200 blog posts to this blog.</p>

<h2 id="problem">Problem</h2>

<p>As there’re more and more pages here, the execution speed of the
command <code>git status</code> gradually <em>decreased</em>.</p>

<picture class="fancybox" title="Git GUI">
  <source srcset="/images/posts/GitGc/gui.png" media="(min-width: 800px)" /> 
  <img alt="git gui prompt" src="https://vincenttam.github.io/images/posts/GitGc/gui_s.png" />
</picture>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>I ran the command <code>git gc</code> in <a href="http://msysgit.github.io/#bash">Git Bash</a> on M$ Win* 7.</p>

<pre class="cli"><code>Welcome to Git (version 1.9.4-preview20140929)


Run 'git help git' to display the help index.
Run 'git help <command />' to display help for specific commands.

<span class="GitHostName">Owner@OWNER-PC</span> <span class="GitPathName">~</span>
$ cd /c/github/vincenttam.github.io/

<span class="GitHostName">Owner@OWNER-PC</span> <span class="GitPathName">/c/github/vincenttam.github.io (source)</span>
$ git gc
Counting objects: 8116, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3621/3621), done.
Writing objects: 100% (8116/8116), done.
Total 8116 (delta 4603), reused 7360 (delta 4064)
Removing duplicate objects: 100% (256/256), done.

<span class="GitHostName">Owner@OWNER-PC</span> <span class="GitPathName">/c/github/vincenttam.github.io (source)</span>
$
</code></pre>

<hr />
<p>(Added on Dec 21, 2014)</p>

<p>I also compressed the local repositories on <a href="http://www.ubuntu.com">Ubuntu</a>.</p>

<pre class="cliUB"><code>[owner@localhost ~/octopress]$ git gc
Counting objects: 14057, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (7403/7403), done.
Writing objects: 100% (14057/14057), done.
Total 14057 (delta 7553), reused 11466 (delta 5741)
Checking connectivity: 49889, done.
[owner@localhost ~/octopress]$ cd _deploy/
[owner@localhost ~/octopress/_deploy]$ git gc
Counting objects: 48241, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (16913/16913), done.
Writing objects: 100% (48241/48241), done.
Total 48241 (delta 23195), reused 38708 (delta 18503)
Removing duplicate objects: 100% (256/256), done.
</code></pre>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Git Repositories in USB Drives on Windows]]></title>
      <link href="https://vincenttam.github.io/blog/2014/10/09/git-repositories-in-usb-drives-on-windows/"/>
    
    <updated>2014-10-09T22:59:24+08:00</updated>
    <id>https://vincenttam.github.io/blog/2014/10/09/git-repositories-in-usb-drives-on-windows</id>
    
      <content type="html"><![CDATA[<h2 id="problem">Problem</h2>

<p><img src="/images/posts/MSysGitUSB/problem.jpg" alt="git bash" /></p>

<p><strong>How to access my USB drive (F:/) in Git Bash?</strong></p>

<p>I had tried closing all instances of Git Bash and re-opening them
again.<sup id="fnref:reopen"><a href="#fn:reopen" class="footnote">1</a></sup>  However, it <em>didn’t</em> worked.</p>

<h2 id="raison-dtre">Raison d’être</h2>

<p>If users can use Git command line utilities in <code>cmd.exe</code>, then what’s
the point of asking the above question?</p>

<p><em>Without</em> stopping <code>ssh-agent.exe</code>, one <em>can’t</em> pull Git repositories
from the hard disk to the USB drive.</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p><img src="/images/posts/MSysGitUSB/taskmgr.jpg" alt="taskmgr" /></p>

<p>The culprit is <code>ssh-agent.exe</code>.  Killing it will do.<sup id="fnref:sol"><a href="#fn:sol" class="footnote">2</a></sup></p>

<h2 id="result">Result</h2>

<p><img src="/images/posts/MSysGitUSB/result.jpg" alt="result" /></p>

<p>The USB drive (F:/) can now be <em>detected</em> in Git Bash.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:reopen">

      <p><a href="http://superuser.com/a/442297"><em>mount external drive on windows7 for git</em></a> in Super
User <a href="#fnref:reopen" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:sol">

      <p><a href="http://stackoverflow.com/a/21375551"><em>Git “unable to determine absolute path of git directory”</em></a>
in Stack Overflow</p>

      <p><blockquote><p>Killing the ssh-agent.exe process works for me.</p><footer><strong>Nikolaos Georgiou</strong></footer></blockquote> <a href="#fnref:sol" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
