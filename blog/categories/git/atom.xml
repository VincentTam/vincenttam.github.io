<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | Blog 1]]></title>
  <link href="http://vincenttam.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://vincenttam.github.io/"/>
  <updated>2014-12-13T18:37:22+08:00</updated>
  <id>http://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Compressed Git Repository for This Site]]></title>
      <link href="http://vincenttam.github.io/blog/2014/12/13/compressed-git-repository-for-this-site/"/>
    
    <updated>2014-12-13T16:39:09+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/12/13/compressed-git-repository-for-this-site</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I’ve uploaded nearly 200 blog posts to this blog.</p>

<h2 id="problem">Problem</h2>

<p>As there’re more and more pages here, the execution speed of the
command <code>git status</code> gradually <em>decreased</em>.</p>

<p><img class="fancybox center" src="/images/posts/GitGc/gui.png" width="800" title="‘Git GUI’ ‘git gui’" ></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>I ran the command <code>git gc</code> in Git Bash on M$ Win* 7.</p>

<pre class="cli"><code>Welcome to Git (version 1.9.4-preview20140929)


Run 'git help git' to display the help index.
Run 'git help <command />' to display help for specific commands.

<span class="GitHostName">Owner@OWNER-PC</span> <span class="GitPathName">~</span>
$ cd /c/github/vincenttam.github.io/

<span class="GitHostName">Owner@OWNER-PC</span> <span class="GitPathName">/c/github/vincenttam.github.io (source)</span>
$ git gc
Counting objects: 8116, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3621/3621), done.
Writing objects: 100% (8116/8116), done.
Total 8116 (delta 4603), reused 7360 (delta 4064)
Removing duplicate objects: 100% (256/256), done.

<span class="GitHostName">Owner@OWNER-PC</span> <span class="GitPathName">/c/github/vincenttam.github.io (source)</span>
$
</code></pre>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Git Repositories in USB Drives on Windows]]></title>
      <link href="http://vincenttam.github.io/blog/2014/10/09/git-repositories-in-usb-drives-on-windows/"/>
    
    <updated>2014-10-09T22:59:24+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/10/09/git-repositories-in-usb-drives-on-windows</id>
    
      <content type="html"><![CDATA[<h2 id="problem">Problem</h2>

<p><img src="/images/posts/MSysGitUSB/problem.jpg" alt="git bash" /></p>

<p><strong>How to access my USB drive (F:/) in Git Bash?</strong></p>

<p>I had tried closing all instances of Git Bash and re-opening them
again.<sup id="fnref:reopen"><a href="#fn:reopen" class="footnote">1</a></sup>  However, it <em>didn’t</em> worked.</p>

<h2 id="raison-dtre">Raison d’être</h2>

<p>If users can use Git command line utilities in <code>cmd.exe</code>, then what’s
the point of asking the above question?</p>

<p><em>Without</em> stopping <code>ssh-agent.exe</code>, one <em>can’t</em> pull Git repositories
from the hard disk to the USB drive.</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p><img src="/images/posts/MSysGitUSB/taskmgr.jpg" alt="taskmgr" /></p>

<p>The culprit is <code>ssh-agent.exe</code>.  Killing it will do.<sup id="fnref:sol"><a href="#fn:sol" class="footnote">2</a></sup></p>

<h2 id="result">Result</h2>

<p><img src="/images/posts/MSysGitUSB/result.jpg" alt="result" /></p>

<p>The USB drive (F:/) can now be <em>detected</em> in Git Bash.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:reopen">

      <p><a href="http://superuser.com/a/442297"><em>mount external drive on windows7 for git</em></a> in Super
User <a href="#fnref:reopen" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:sol">

      <p><a href="http://stackoverflow.com/a/21375551"><em>Git “unable to determine absolute path of git directory”</em></a>
in Stack Overflow</p>

      <p><blockquote><p>Killing the ssh-agent.exe process works for me.</p><footer><strong>Nikolaos Georgiou</strong></footer></blockquote> <a href="#fnref:sol" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Fixing This Repo's Network Graph]]></title>
      <link href="http://vincenttam.github.io/blog/2014/09/05/fixing-this-repos-network-graph/"/>
    
    <updated>2014-09-05T23:33:17+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/09/05/fixing-this-repos-network-graph</id>
    
      <content type="html"><![CDATA[<p>Tonight, I worked on my blog.  Here’re something done.</p>

<ol>
  <li>Fixed a dead link in <a href="/blog/2014/05/26/using-octopress-on-another-device/">Using Octopress on Another Device</a> in
<em>Blog 1</em>.</li>
  <li>Fixed <code>url</code> in <code>_config.yml</code>: it should be in lower case.<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup></li>
  <li>Understand item 5 of Scott Cheng’s post on setting up
<a href="http://www.octopress.org">Octopress</a>.<sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup>  In May, I <em>didn’t</em> understand it.<sup id="fnref:3"><a href="#fn:3" class="footnote">3</a></sup>  I’ve tested
it in order to understand what it really means.  After running <code>rake
setup_github_pages</code>, <code>_deploy</code> folder has <em>only</em> local <code>master</code>
branch, and <em>no</em> remote branch.  Therefore, it’s <em>impossible</em> to
remote the <em>only</em> branch there.  To avoid conflicts when I push my
commits on <code>master</code> branch to my remote repository in GitHub, I ran
some commands as shown below.</li>
  <li>Fixed the network graph of the GitHub repository for <em>Blog 1</em>.
    <ul>
      <li>Original graph: Due to my poor knowledge on <a href="http://git-scm.com/">Git</a>, <code>master</code>
 branch shares, as shown in the graph, a common node with
 <code>source</code> branch.  This is <em>wrong</em>!</li>
      <li>Deleted locally <code>origin/master</code> branch and <code>master</code> branch in
 the remote repository to clear the mess.</li>
      <li>In the new graph, those two branches <em>don’t</em> share a common node
 anymore.</li>
    </ul>
  </li>
</ol>

<pre class="cli"><code class="UBMono">[owner@localhost ~/octopress/_deploy]$ git branch -rd origin/master
Deleted remote branch origin/master (was e745caf).
owner@owner-Inspiron-560s:~/octopress/_deploy$ git branch -a
* <span class="GitBrName">master</span>
[owner@localhost ~/octopress/_deploy]$ git push origin --delete master
To git@github.com:vincenttam/vincenttam.github.io.git
 - [deleted]         master
</code></pre>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>See commit <a href="https://github.com/VincentTam/vincenttam.github.io/commit/49f9d1b" title="Corrected the config file">49f9d1b</a> for details. <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>This Markdown source code of the <a href="https://github.com/scottcheng/scottcheng.com-v1/blob/3bb8142/source/_posts/2012-11-07-setting-up-existing-octopress-blog-on-a-new-computer.markdown">post</a> can be found in GitHub. <a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p>See the <a href="https://github.com/scottcheng/scottcheng.com-v1/blob/3bb8142/source/_posts/2012-11-07-setting-up-existing-octopress-blog-on-a-new-computer.markdown">post</a> in item 1 for details. <a href="#fnref:3" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Double Hyphens in Git Checkout]]></title>
      <link href="http://vincenttam.github.io/blog/2014/08/07/double-hyphens-in-git-checkout/"/>
    
    <updated>2014-08-07T18:08:56+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/08/07/double-hyphens-in-git-checkout</id>
    
      <content type="html"><![CDATA[<p>While I was writing my <a href="/blog/2014/08/07/double-hyphens-in-git-diff/" title="Double Hyphens in Git Diff">previous post</a>, I made a link to
<a href="http://supercollider.sourceforge.net/wiki/index.php/Developer_cheatsheet_for_git#Common_git_commands" title="Developer Cheatsheet for Git">a Git cheatsheet</a>.  In the list, I saw a <em>wrong</em> command.</p>

<pre><code>git checkout – &lt;file&gt;
</code></pre>

<p>It is <em>incorrect</em> to use an en-dash <code>–</code> in the above command, instead
of a double hyphen <code>--</code>.  I’ll illustrate this with an example below.
Assume that the current file is <code>~/octopress</code>.</p>

<pre class="cli"><code class="UBMono">$ cat &gt;&gt; Gemfile
bullshxt
$ git diff
<span class="UBHLCode">diff --git a/Gemfile b/Gemfile
index 4d028d3..a1718ff 100644
    --- a/Gemfile
    +++ b/Gemfile</span>
<span class="gitA">@@ -20,3 +20,4 @@</span> group :development do
 end
 
 gem 'sinatra', '~&gt; 1.4.2'
<span class="gitP">+bullshxt</span>

...

$ git checkout <span class="err">—</span> Gemfile
<span class="err">error: pathspec '—' did not match any file(s) known to git.</span>

$ git checkout <span class="UBHLCode">--</span> Gemfile  # correct command
</code></pre>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Double Hyphens in Git Diff]]></title>
      <link href="http://vincenttam.github.io/blog/2014/08/07/double-hyphens-in-git-diff/"/>
    
    <updated>2014-08-07T15:41:10+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/08/07/double-hyphens-in-git-diff</id>
    
      <content type="html"><![CDATA[<p>Two months ago, I wrote my first list of Git commands, and said that I
<em>didn’t</em> know how to use Git commands to view the changes.<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup></p>

<p>Now, I can understand how one can “use ‘<code>--</code>’ to separate paths from
revisions [or branches]”.</p>

<!-- more -->

<p>For example, if a developer relies on <a href="http://supercollider.sourceforge.net/wiki/index.php/Developer_cheatsheet_for_git#Simple_work_on_your_main_.28master.29_branch" title="Developer Cheatsheet for Git">this Git cheatsheet</a>
for blogging with Octopress, then he/she will learn to some Git
commands, for example:</p>

<ol>
  <li><code>git diff &lt;branch&gt;</code> to view the uncommitted changes;</li>
  <li><code>git diff &lt;path&gt;</code> to show the uncommitted changes in files under
<code>&lt;path&gt;</code>.</li>
</ol>

<p>Those commands should be enough for most cases.  However, if he/she
blogs with <a href="http://www.octopress.org">Octopress</a>, then he/she will encounter the some problems:</p>

<ol>
  <li><code>git diff source</code> <em>can’t</em> view the uncommitted changes on <code>source</code>
branch;  (Click the linked post in <a href="#fn:1">footnote 1</a> for the error
thrown by Git.)</li>
  <li><code>git diff source</code> <em>can’t</em> show the uncommitted changes in files
under <code>source</code> folder.</li>
</ol>

<p>In order to use <code>git diff</code> to do the intended task, one has to avoid
ambiguity.</p>

<ol>
  <li>If necessary, one can use <code>--</code> to separate branch name(s) from
file/path names;</li>
  <li>One can use <code>./source</code> to mean <code>source</code> folder.</li>
</ol>

<pre class="cli"><code class="UBMono"><span class="err">$ git diff origin/source source
fatal: ambiguous argument 'source': both revision and filename
Use '--' to separate paths from revisions, like this:
'git &lt;command&gt; [&lt;revision&gt;...] -- [&lt;file&gt;...]'</span>
$ git diff origin/source source <span class="UBHLCode">--</span>  # correct command
$ git diff <span class="UBHLCode">./</span>source                 # correct command
</code></pre>

<p>If one <em>doesn’t</em> want to type in shell commands, one may consider
using <a href="https://github.com/tpope/vim-fugitive">fugitive.vim</a>: in a window invoked by <code>:Gst</code>, press <code>D</code> at the
line where the modified file is shown.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>Tam, V. 2014, Jun 16. <em>My Git Command List (1)</em>. Retrieved from <a href="https://vincenttam.github.io/blog/2014/06/16/my-git-command-list-1/#comparing-branches">https://vincenttam.github.io/blog/2014/06/16/my-git-command-list-1/#comparing-branches</a> <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
