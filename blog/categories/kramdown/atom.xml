<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Kramdown | Blog 1]]></title>
  <link href="https://vincenttam.github.io/blog/categories/kramdown/atom.xml" rel="self"/>
  <link href="https://vincenttam.github.io/"/>
  <updated>2016-12-15T18:50:12+01:00</updated>
  <id>https://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[A Quick Markdown Syntax Error Detection for Writing MathJax Equations in Octopress Posts (4)]]></title>
      <link href="https://vincenttam.github.io/blog/2016/12/12/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-4/"/>
    
    <updated>2016-12-12T21:47:36+01:00</updated>
    <id>https://vincenttam.github.io/blog/2016/12/12/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-4</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I’m recently enhancing the $\rm \LaTeX$ code for inline limits.  For
the reason of doing so, you may refer to the external link of
<a href="http://meta.math.stackexchange.com/a/15077/290189">my recent linklog</a> <em>Inline Limit Rendering</em>.</p>

<h2 id="problem">Problem</h2>

<p>In the previous post in this series written over one year ago, I have
included a code block which enables <a href="/blog/2015/08/04/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3/#include-the-script-in-the-content">deferred MathJax loading</a>.
However, I manually added this chuck of code in the HTML file
generated by <a href="http://kramdown.gettalong.org/">kramdown</a>, which created the problem described in the
next subsection <em>A problem with Vim’s folding arised</em>.</p>

<h2 id="solution">Solution</h2>

<p>Firstly, save the code for loading <a href="https://www.mathjax.org/">MathJax</a> in the previous post in
this series in a separate file <code>~/script.html</code>.  Then use the
following commands <em>within</em> Vim in order to avoid leaving the current
buffer and to improve efficiency.</p>

<pre><code>9,$w! ~/temp.mkd
!kramdown ~/temp.mkd &gt; ~/temp.html
!cat ~/{temp,script}.html &gt; ~/test.html
</code></pre>

<p>The digit <code>9</code> in the first command <em>isn’t</em> exact.  Change it to any
line number that separates the <a href="http://jekyllrb.com/docs/frontmatter/">yaml front matter</a> from the
post content.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Hyperlinks in Ordered Lists in Markdown in Vim]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/09/hyperlinks-in-ordered-lists-in-markdown-in-vim/"/>
    
    <updated>2016-02-09T18:06:42+01:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/09/hyperlinks-in-ordered-lists-in-markdown-in-vim</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>Same as the one in <a href="/blog/2016/02/09/rake-aborted-due-to-a-vim-swap-file/">my previous post</a>.</p>

<p>I usually write hyperlinks for software names using only one pair of
square brackets, like <code>[Vim]</code> instead of <code>[Vim][Vim]</code>.  Even though
this <em>isn’t</em> standard, this is more convenient.</p>

<h2 id="problem">Problem</h2>

<p>I want to start the second item of the following ordered list with a
hyperlink to <a href="https://github.com/kana/vim-textobj-lastpat">textobj-lastpat</a> written in a short but non-standard
way.</p>

<p><figure class='code'><figcaption><span>Markdown source code of the ordered list  (test-post.mkd)</span> <a href='/downloads/code/olhlmdvim/test-post.mkd'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Lessons learnt
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>Moreover, I revised the usage of these two [Vim] plugins.
</span><span class='line'>
</span><span class='line'>1. [Visual Star Search][visual-star-search]: Select text in visual
</span><span class='line'>   mode and search it with an asterisk `*`.
</span><span class='line'>2. [textobj-lastpat]: Add the last search pattern as a text object.
</span><span class='line'>
</span><span class='line'>[Vim]: http://www.vim.org
</span><span class='line'>[visual-star-search]: https://github.com/bronson/vim-visual-star-search
</span><span class='line'>[textobj-lastpat]: https://github.com/kana/vim-textobj-lastpat
</span></code></pre></td></tr></table></div></figure></p>

<p>Unluckily, as I typed this Vim Ex command
<a href="/blog/2015/08/05/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3/">to see whether my Markdown syntax was correct</a>, I quickly
received an error from <a href="http://kramdown.gettalong.org">kramdown</a>.</p>

<pre class="cliUB"><code>:!kramdown % &gt; %&lt;.html
</code></pre>

<p>You may click “donwload” at the top right hand corner of the codeblock
below to see the effect of the result generated by ihe Markdown
parser.</p>

<p><figure class='code'><figcaption><span>Generated HTML code of the ordered list (test-post.html)</span> <a href='/downloads/code/olhlmdvim/test-post.html'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h2</span> <span class="na">id=</span><span class="s">&quot;lessons-learnt&quot;</span><span class="nt">&gt;</span>Lessons learnt<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>Moreover, I revised the usage of these two <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://www.vim.org&quot;</span><span class="nt">&gt;</span>Vim<span class="nt">&lt;/a&gt;</span> plugins.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;ol&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;https://github.com/bronson/vim-visual-star-search&quot;</span><span class="nt">&gt;</span>Visual Star Search<span class="nt">&lt;/a&gt;</span>: Select text in visual
</span><span class='line'>mode and search it with an asterisk <span class="nt">&lt;code&gt;</span>*<span class="nt">&lt;/code&gt;</span>.<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ol&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<pre class="cliUB"><code>Warning: Duplicate link ID 'textobj-lastpat' on line 13 - overwriting

Press ENTER or type command to continue
</code></pre>

<h2 id="solution">Solution</h2>

<p>This time, I <em>won’t</em>
<a href="http://polymerhk.com/articles/2016/02/03/27363/">find out what’s wrong from the error message</a> because writing
that hyperlink in the standard way is the quickest solution that I
know.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[How Does Git Commit Amend Work?]]></title>
      <link href="https://vincenttam.github.io/blog/2015/08/07/how-does-git-commit-amend-work/"/>
    
    <updated>2015-08-07T11:15:29+02:00</updated>
    <id>https://vincenttam.github.io/blog/2015/08/07/how-does-git-commit-amend-work</id>
    
      <content type="html"><![CDATA[<h2 id="situation">Situation</h2>

<p>I’ve written and commited the post <a href="/blog/2015/08/06/my-git-command-list-3/"><em>My Git Command List (3)</em></a>,
but after a while, I changed that post.  In order not to complexify
my Git commit history, I used <code>git commit --amend -a</code>.  That’s quite
simple and convenient.  I observed that the displayed time in the
amended commit was the <em>same</em> as the original one, whereas the SHA-1
hash was <em>changed</em> so that Git knows that they’re <em>different</em>.
However, from
<a href="/blog/2015/08/07/git-object-id-generation-1-blobs-and-commits/"><em>Git Object ID Generation (1): Blobs and Commits</em></a>, I’ve learnt
that the ID of Git commit objects is totally determined by</p>

<ol>
  <li>the content of the commit message</li>
  <li>the commit time</li>
  <li>the author</li>
</ol>

<p>In this case, no difference of the above factors between the original
commit and the amended commit can be observed with <code>git show</code>.</p>

<h2 id="problem">Problem</h2>

<p><strong>In what way do the original commit and the amended commit differ?</strong></p>

<!-- more -->

<h2 id="difference">Difference</h2>

<p>To solve this problem, I scrolled up the screen and captured the SHA-1
hashes fo the two commits.</p>

<ul>
  <li>the original commit’s hash: <code>9de8974b93a2e4032b608c0de17ea5ed0c55524b</code></li>
  <li>the amended commit’s hash: <code>5b7b566b8a07d4813ba9f08a326e169cf38ca20f</code></li>
</ul>

<p>Note: I just <em>make up</em> the email address <code>demo@example.com</code> to replace
my real email address to <a href="http://www.problogger.net/archives/2008/12/06/10-reasons-to-avoid-mailto-links/">avoid email spams</a>.  Therefore,
<strong>the above commit hashes don’t correspond to the content displayed
below</strong>.  In fact, they correspond to the commits in the Git
repository for this blog.</p>

<pre class="cliUB"><code>$ git cat-file -p 9de8974b93a2e4032b608c0de17ea5ed0c55524b
tree b9f4fb708327e25c8b1b822711ec7dda9c5b2198
parent <a href="https://github.com/VincentTam/vincenttam.github.io/commit/afcb4d97cb447112bd2e930159966d92b8e4754a">afcb4d97cb447112bd2e930159966d92b8e4754a</a>
author Vincent Tam &lt;demo@example.com&gt; 1438859683 +0800
committer Vincent Tam &lt;demo@example.com&gt; <span class="UBHLCode">1438859683</span> +0800

A new post on some Git low level commands

I *don't* go over the details of the book *Pro Git*, which is available
online.  I just select some important ones for quick reference.
$ git cat-file -p 5b7b566b8a07d4813ba9f08a326e169cf38ca20f
tree 2d864bcb7e4944e9d98b663649c79084692873c1
parent <a href="https://github.com/VincentTam/vincenttam.github.io/commit/afcb4d97cb447112bd2e930159966d92b8e4754a">afcb4d97cb447112bd2e930159966d92b8e4754a</a>
author Vincent Tam &lt;demo@example.com&gt; 1438859683 +0800
committer Vincent Tam &lt;demo@example.com&gt; 1438864942 +0800

A new post on some Git low level commands

I *don't* go over the details of the book *Pro Git*, which is available
online.  I just select some important ones for quick reference.</code>
</pre>

<p>Hence, the difference of the timestamp of the <code>committer</code> causes the
difference in the hashes, whereas the timestamp of the <code>author</code> is
converted to a human readable date for display.</p>

<h2 id="facts-learnt">Facts learnt</h2>

<h3 id="unix-timestamp">Unix timestamp</h3>

<p>A Unix timestamp is the number of seconds elasped since the start of
the year 1970 in <abbr title="Global Mean Time">GMT</abbr>.</p>

<h3 id="a-little-bit-kramdown-syntax-eob-marker">A little bit kramdown syntax: <abbr title="End-Of-Block">EOB</abbr> marker</h3>

<p>According to kramdown’s syntax guide,
<a href="http://kramdown.gettalong.org/syntax.html#eob-marker">the <abbr title="End-Of-Block">EOB</abbr> marker <em>won’t</em> be found in most Markdown documents</a>.  In
order to include a list followed by a code block that <em>isn’t</em>
contained inside the list, the boundary of the list has to be
specified by a line consisting of a leading ‘^’ character.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[A Quick Markdown Syntax Error Detection for Writing MathJax Equations in Octopress Posts (3)]]></title>
      <link href="https://vincenttam.github.io/blog/2015/08/04/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3/"/>
    
    <updated>2015-08-04T18:18:45+02:00</updated>
    <id>https://vincenttam.github.io/blog/2015/08/04/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I often write math in this blog.  After typing lots of characters,
syntax errors are <em>inevitable</em>, but no one wants them to be published.
Unluckily, the <code>rake generate</code> command takes <em>too long</em> to run.  In
order to find them out more quickly, I quickly went over the
<code>Gemfile</code> of the repository for this blog, and saw that the Markdown
engine of Octopress is kramdown.  Therefore, I used the command line
version of this Markdown parser to convert my Markdown source file to
an HTML document by a Vim Ex command.</p>

<pre><code>:!kramdown % &gt; %&lt;.html
</code></pre>

<p>For this, I’ve written two posts describing the workflow of producing
HTML web pages consisting of math expressions from Markdown source
files using kramdown and MathJax.</p>

<h2 id="problem">Problem</h2>

<p>In <a href="/blog/2014/12/10/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-1/">the first post</a> in this series, I’ve made a list of steps
in Vim.  However, jumping to other files is laborious.  More
importantly, those steps involve browsing and copying of lines of
HTML code of the <code>&lt;head&gt;</code>, which loads MathJax, in other HTML files.
This can <em>seriously</em> slow down the editing process.  Unhappily, this
problem <em>isn’t</em> solved in <a href="/blog/2014/12/13/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-2/">the second post</a> in this series.</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<h3 id="include-the-script-in-the-content">Include the script in the content</h3>

<p>There might be some option for the kramdown command line utility to
use accept an HTML template files during the code conversion.
However, I’m <em>too lazy</em> to search for them as I need to work on
math.<sup id="fnref:pp1"><a href="#fn:pp1" class="footnote">1</a></sup></p>

<p>Remembering that I defered the loading of JavaScripts in order to
boost the PageSpeed score of this site, I adpated the script to load
MathJax instead of fancyBox in my draft markdown file.<sup id="fnref:pp2"><a href="#fn:pp2" class="footnote">2</a></sup></p>

<p><figure class='code'><figcaption><span>Put this at the bottom </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">getScript</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">success</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">script</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">head</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">done</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nx">done</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;loaded&#39;</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;complete&#39;</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">done</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">success</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">head</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nx">head</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span><span class="nt">&lt;/script&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>getScript(“https://cdn.mathjax.org/mathjax/latest/MathJax.js?” +
</span><span class='line'>    “config=TeX-AMS-MML_HTMLorMML” +
</span><span class='line'>    “,https://vincenttam.github.io/javascripts/MathJaxLocal.js”,
</span><span class='line'>    function(){});<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>})();
</span><span class='line'><span class="ni">&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="a-problem-with-vims-folding-arised">A problem with Vim’s folding arised</h3>

<hr />
<p>(Added on DEC 12TH, 2016)</p>

<p>This subsection can be omitted since appending the above code can be
done with <code>cat</code>.  Please see <a href="/blog/2016/12/12/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-4/">the next post</a> in this series for
the detailed description.</p>

<hr />

<p>By default, with the plugin <code>vim-markdown</code> installed, the sections are
<em>folded</em>.  Before I can continue editing at the end of the file, I
have to open the last fold, which contained more than 25 lines due to
the script enabling MathJax at the bottom.  As a result, I have to
move back to the middle of the last fold by pressing <code>k</code> for a while.
That annoys me.  If the script is contained in a separate fold, it’s
better.  Therefore, adding a blank line and then a line consisting of
three hyphens will fix this problem.</p>

<h2 id="inadequacies">Inadequacies</h2>

<hr />
<p>(Added on SEP 3RD, 2015)</p>

<p>Now I realised that kramdown will leave the trailing two backslashes
at each line inside <code>&lt;div&gt;</code> tags in Markdown source files <em>untouched</em>.</p>

<hr />

<p>In <a href="/blog/2014/12/13/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-2/">the second post</a> in this series, we know that <code>&lt;div&gt;</code> tag
prevents kramdown from converting the code inside the tag to HTML,
while in <a href="/blog/2014/09/14/kramdowns-markdown-attributes/">another old post about kramdown’s Markdown attributes</a>,
one can revert the above behaviour by simply adding an attribute
<code>markdown="1"</code> to the <code>&lt;div&gt;</code> tag.  These can be reflected in the
above test.</p>

<p>Usually, in math environments inside a $\rm \LaTeX$ document, double
backslashes <code>\\</code> start a new line, and it’s the same in MathJax.
Typing <em>two</em> backslashes in the Markdown source down will suffice.
Unluckily, in the <em>real Markdown source</em> for Octopress posts, <em>four</em>
<code>\</code> are needed.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:pp1">

      <p>For example, I have to think about
<a href="/blog/2015/08/04/some-thoughts-on-a-real-valued-function/">multi-variable real-valued functions</a>. <a href="#fnref:pp1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:pp2">

      <p>Refer to my old post
<a href="/blog/2014/12/29/octopress-pagespeed-jquery-and-fancybox/"><em>Octopress, PageSpeed, jQuery and fancyBox</em></a> in <em>Blog 1</em> for
details. <a href="#fnref:pp2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Fbi vs Fim]]></title>
      <link href="https://vincenttam.github.io/blog/2015/04/10/fbi-vs-fim/"/>
    
    <updated>2015-04-10T18:15:56+02:00</updated>
    <id>https://vincenttam.github.io/blog/2015/04/10/fbi-vs-fim</id>
    
      <content type="html"><![CDATA[<p>This is just a small table listing <em>some</em> differences between <abbr title="framebuffer imageviewer">fbi</abbr> and
<abbr title="fbi improved">fim</abbr>.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center"> </th>
      <th style="text-align: left">Advantages</th>
      <th style="text-align: left">Disadvantages</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><abbr title="framebuffer imageviewer">fbi</abbr></td>
      <td style="text-align: left">support SVG files</td>
      <td style="text-align: left"><em>doesn’t</em> support tmux <br /> <em>doesn’t</em> have full control over the zooming size</td>
    </tr>
    <tr>
      <td style="text-align: center"><abbr title="fbi improved">fim</abbr></td>
      <td style="text-align: left">support tmux <br /> support custom zooming<sup id="fnref:fim_zoom"><a href="#fn:fim_zoom" class="footnote">1</a></sup></td>
      <td style="text-align: left"><em>doesn’t</em> support SVG files</td>
    </tr>
  </tbody>
</table>

<p>To view SVG images in tmux buffers, one can use ImageMagick’s
<code>convert</code> command.<sup id="fnref:convert"><a href="#fn:convert" class="footnote">2</a></sup></p>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>While writing the above table, I ran into the problem of a Markdown
table with more than one line.  Luckily, searching “kramdown table
lines” on Google, I quickly found a Stack Overflow question which
solved my problem.<sup id="fnref:so12119310"><a href="#fn:so12119310" class="footnote">3</a></sup>  Note that <code>&lt;br&gt;</code> is <em>not</em> the best
way: add a slash <code>/</code> to suppress the following messages.</p>

<pre class="cliUB"><code>Warning: The HTML tag 'br' on line 15 cannot have any content -
auto-closing it
Warning: The HTML tag 'br' on line 17 cannot have any content -
auto-closing it
Warning: The HTML tag 'br' on line 1 cannot have any content -
auto-closing it
Warning: The HTML tag 'br' on line 1 cannot have any content -
auto-closing it
</code></pre>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:fim_zoom">
      <p>By <code>:nn%</code> <a href="#fnref:fim_zoom" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:convert">
      <p>By <code>convert in.svg out.jpg</code> <a href="#fnref:convert" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:so12119310">

      <p><a href="http://stackoverflow.com/a/12119310"><em>Newline in markdown table?</em></a> on Stack Overflow. <a href="#fnref:so12119310" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
