<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Blog 1]]></title>
  <link href="http://vincenttam.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://vincenttam.github.io/"/>
  <updated>2015-01-18T16:32:04+08:00</updated>
  <id>http://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Use Lynx Browser (2): Access Shell]]></title>
      <link href="http://vincenttam.github.io/blog/2015/01/03/use-lynx-browser-2-access-shell/"/>
    
    <updated>2015-01-03T21:26:24+08:00</updated>
    <id>http://vincenttam.github.io/blog/2015/01/03/use-lynx-browser-2-access-shell</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I often use <a href="http://lynx.isc.org/" title="Lynx Browser">Lynx</a> due to several reasons.<sup id="fnref:use_lynx"><a href="#fn:use_lynx" class="footnote">1</a></sup></p>

<h2 id="problem">Problem</h2>

<p>While browsing the Internet with Lynx, one can spawn the shell, so that
one can resume the browsing session after executing some commands.</p>

<p>When one wants to exit the shell invoked by ‘!’ in Lynx, the command
required is the <em>same</em> as the one needed for logging out: <code>exit</code>.
These are pretty <em>easy</em>.</p>

<p>However, in Linux text mode, if one typed some commands and the
contents in the browser were <em>completely</em> covered by the output of
these commands, <strong>how can one distinguishs a shell started by Lynx
from the one that simply exists after one has logged in?</strong></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>At first, I typed <code>ps aux | grep lynx</code> to determine whether Lynx was
running.  After that, I issued <code>ps</code>, and got a small list of running
processes.  Then I tried adding the letters <code>a</code>, <code>u</code>, and <code>x</code> after
the previous command.</p>

<ul>
  <li><code>a</code>: Received processes from all TTY consoles, instead of the
  current one.</li>
  <li><code>x</code>: A <code>STAT</code> column was shown.</li>
  <li><code>u</code>: More details were shown, including the <code>STAT</code> column.</li>
</ul>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:use_lynx">
      <p>See <a href="/blog/2014/06/07/use-lynx-browser/"><em>Use Lynx Browser</em></a> for the reasons. <a href="#fnref:use_lynx" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Git Push to USB]]></title>
      <link href="http://vincenttam.github.io/blog/2015/01/01/git-push-to-usb/"/>
    
    <updated>2015-01-01T22:51:20+08:00</updated>
    <id>http://vincenttam.github.io/blog/2015/01/01/git-push-to-usb</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<ol>
  <li>I created a bare Git repository in my USB stick on GUI.</li>
  <li>I pushed some Git commits to the bare repository in the USB.</li>
</ol>

<p>The commands for the above steps <em>shouldn’t</em> be difficult.  In step 2,
if one sets the upstream repository to the bare repository in the USB,
the command to be issued is even easier: just <code>git push</code> will do, and
the remote and branch names can be omitted.</p>

<h2 id="problem">Problem</h2>

<p>I worked on Linux text mode instead of GUI.  After committing the
changes, I tried pushing them into the bare Git repository in the USB.</p>

<pre class="cliUB"><code>[owner@localhost ~/MATH2220]$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[owner@localhost ~/MATH2220]$ sudo mount -t vfat /dev/sdf1 \
&gt; /media/owner/08F1-B181/
[owner@localhost ~/MATH2220]$ git push
Counting objects: 4, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 551 bytes | 0 bytes/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: error: insufficient permission for adding an object to repository databa
se objects
remote: fatal: failed to write object
error: unpack failed: unpack-objects abnormal exit
To /media/owner/08F1-B181/MATH2220/MATH2220.git
 ! [remote rejected] master -&gt; master (unpacker error)
error: failed to push some refs to '/media/owner/08F1-B181/MATH2220/MATH2220.git
'
</code></pre>

<p><strong>How can I push commits into the USB?</strong></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>I googled “git push usb rejected” for a similar problem, and “linux
text mode git” for a Git tutorial on CLI, but I <em>couldn’t</em> find what I
wanted.  I observed that this <em>wasn’t</em> a problem of Git, but a problem
about file permissions on *nix.</p>

<pre class="cliUB"><code>[owner@localhost ~/MATH2220]$ ll /media/owner/
total 12
drwxr-x---+ 3 root root 4096 Jan  1 21:40 ./
drwxr-xr-x  4 root root 4096 Aug 13 02:09 ../
drwxr-xr-x  2 root root 4096 Jan  1 21:40 08F1-B181/
</code></pre>

<p>Then I changed the search words, and finally found a page on SUSE
Communities.<sup id="fnref:suse"><a href="#fn:suse" class="footnote">1</a></sup>  I read the commands and their descriptions, and
eventually solved the problem.</p>

<p>After I had unmounted the USB drive, I typed the command for mounting
the USB stick again.</p>

<pre class="cliUB"><code>[owner@localhost ~/MATH2220]$ sudo umount /media/owner/08F1-B181/
[owner@localhost ~/MATH2220]$ sudo mount -t vfat -o uid=owner,gid=owner\
&gt; /dev/sdf1 /media/owner/08F1-B181/
[owner@localhost ~/MATH2220]$ git push
Counting objects: 4, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 551 bytes | 0 bytes/s, done.
Total 4 (delta 1), reused 0 (delta 0)
To /media/owner/08F1-B181/MATH2220/MATH2220.git
   9e8e53e..4fa36c7  master -&gt; master
</code></pre>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>One can specify the owner and the user group of the VFAT filesystem to
be mounted with <code>-o uid=foo,gid=bar</code> for USB devices.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:suse">

      <p><a href="https://www.suse.com/communities/conversations/manually-mounting-a-usb-flash-drive-in-linux/"><em>Manually Mount a USB Flash Drive in Linux</em></a> by
coolguys-suse on SUSE Communities. <a href="#fnref:suse" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[An Up-to-date Git on Ubuntu]]></title>
      <link href="http://vincenttam.github.io/blog/2014/12/21/an-up-to-date-git-on-ubuntu/"/>
    
    <updated>2014-12-21T01:03:49+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/12/21/an-up-to-date-git-on-ubuntu</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>Tonight, I read the most recent blog article on
<a href="https://github.com/blog">GitHub’s blog</a>.<sup id="fnref:post"><a href="#fn:post" class="footnote">1</a></sup>  It says that the version of Git Bash
on my M$ Win* 7 is <em>unsafe</em>.  Moreover, it is claimed that
<a href="https://www.gnu.org/gnu/linux-and-gnu.en.html">GNU/Linux</a> computers <em>aren’t</em> affected since they’re case
sensitive.  At first, I believed that I <em>didn’t</em> need to upgrade my
<a href="http://git-scm.com/">Git</a>.  However, after I clicked the link for the announcement of Git
v2.2.1, I checked the version of the <a href="http://git-scm.com/">Git</a> on <a href="http://www.ubuntu.com">Ubuntu</a>, and found out
that it <em>wasn’t</em> the newest one.  The following paragraph convinced me
to get this update on my Ubuntu desktop.</p>

<p><blockquote><p>Even though the issue may not affect Linux users, if you are a hosting service whose users may fetch from your service to Windows or Mac OS X machines, you are strongly encouraged to update to protect such users who use existing versions of Git.</p><footer><strong>Junio C Hamano</strong> <cite><a href='http://article.gmane.org/gmane.linux.kernel/1853266'>[ANNOUNCE] Git v2.2.1 (and Updates to Older Maintenance Tracks)</a></cite></footer></blockquote></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>Add the <abbr title="Personal Package Archive">PPA</abbr> for <a href="http://git-scm.com/">Git</a>.</p>

<pre class="cliUB"><code>$ sudo add-apt-repository ppa:git-core/ppa
[sudo] password for owner:
 The most current stable version of Git for Ubuntu.

For release candidates, go to https://launchpad.net/~git-core/+archive/candidate .
  More info: https://launchpad.net/~git-core/+archive/ubuntu/ppa
Press [ENTER] to continue or Ctrl-C to cancel adding it

gpg: keyring `/tmp/tmplo3t2ozz/secring.gpg' created
gpg: keyring `/tmp/tmplo3t2ozz/pubring.gpg' created
gpg: requesting key E1DF1F24 from hkp server keyserver.ubuntu.com
gpg: /tmp/tmplo3t2ozz/trustdb.gpg: trustdb created
gpg: key E1DF1F24: public key "Launchpad PPA for Ubuntu Git Maintainers" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
OK
</code></pre>

<p>Update the package information and upgrade the file.</p>

<pre class="cliUB"><code>$ sudo apt-get upgrade
Reading package lists... Done
Building dependency tree
Reading state information... Done
Calculating upgrade... Done
The following packages will be upgraded:
  git git-core git-man gitk
4 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 5,604 kB of archives.
After this operation, 1,528 kB of additional disk space will be used.
Do you want to continue? [Y/n] Y
Get:1 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main gitk all 1:2.2.1-0ppa2~ubuntu14.04.1 [704 kB]
Get:2 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git i386 1:2.2.1-0ppa2~ubuntu14.04.1 [3,601 kB]
Get:3 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git-man all 1:2.2.1-0ppa2~ubuntu14.04.1 [1,298 kB]
Get:4 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git-core all 1:2.2.1-0ppa2~ubuntu14.04.1 [1,412 B]
Fetched 5,604 kB in 23s (240 kB/s)
(Reading database ... 380182 files and directories currently installed.)
Preparing to unpack .../gitk_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking gitk (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git_1%3a2.2.1-0ppa2~ubuntu14.04.1_i386.deb ...
Unpacking git (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git-man_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking git-man (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git-core_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking git-core (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
Setting up git-man (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up git (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up gitk (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up git-core (1:2.2.1-0ppa2~ubuntu14.04.1) ...
</code></pre>

<p>Now, I’ve the newest stable release of <a href="http://git-scm.com/">Git</a>.</p>

<pre class="cliUB"><code>$ git --version
git version 2.2.1
</code></pre>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:post">

      <p><a href="http://article.gmane.org/gmane.linux.kernel/1853266"><em>Vulnerability announced: update your Git clients</em></a> by
Vicent Marti. <a href="#fnref:post" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Using Xclip]]></title>
      <link href="http://vincenttam.github.io/blog/2014/12/12/using-xclip/"/>
    
    <updated>2014-12-12T17:21:12+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/12/12/using-xclip</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I always use commands for different tasks.  Then I need a command line
utility for copying command output into clipboard so as to quickly
finish typing the command.  Luckily, it’s very easy to install xclip
on Ubuntu.  I believe that on other GNU/Linux distributions, the
installation <em>won’t</em> be too difficult.</p>

<p>Although it’s convenient to use xclip, I experienced two problems
while using it on *nix GUI.</p>

<h2 id="problem-1">Problem 1</h2>

<p>Suppose that you want to capture the output of a command, and pipe it
to another command.  However, the output often consists of a trailing
newline character.  As a result, I sometimes executed commands
incorrectly and carelessly.  <strong>How can one get rid of it?</strong></p>

<h2 id="problem-2">Problem 2</h2>

<p>Before this Wednesday morning, I <em>didn’t</em> know how to use xclip with
other options.  Therefore, when I wanted to retrieve to contents in
the clipboard, the <em>only</em> two ways that I knew were to use the utility
with the <code>-o</code> flag to obtain the <strong>o</strong>utput, and to use the middle
click of the mouse.  However, from problem one, I <em>couldn’t</em> chop off
the newline character at the end of the clipped text.  Moreover, if
one only needs <em>part</em> of the text in the clipboard, it would be quite
troublesome to pipe the output of <code>xclip -o</code> to other text editing
commands like <code>sed</code> and <code>awk</code>.  If one can use a keyboard shortcut for
pasting text in a terminal emulator like Gnome Terminal (e.g.
<code>&lt;C-v&gt;</code>), then one can also use <code>&lt;C-b&gt;</code>, <code>&lt;Alt-d&gt;</code>, etc. For example,
if there’re three words in the clipboard, and I only need the last
two, then combining the use of these keyboard shortcuts will enable
one to type strings quickly and accurately.  <strong>Is there such a
keyboard shortcut?</strong></p>

<h2 id="solution">Solution</h2>

<p>I found two Stack Overflow quesitons extremely useful for improving my
skills in xclip.</p>

<ol>
  <li><a href="http://stackoverflow.com/a/12524320">Bash: Strip trailing linebreak from output</a></li>
  <li><a href="http://stackoverflow.com/a/4208191">Pipe to/from Clipboard</a></li>
</ol>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[International Space Station Attacked by "Virus Epidemics" &#9733;]]></title>
      <link href="http://www.theguardian.com/technology/2013/nov/12/international-space-station-virus-epidemics-malware"/>
    
    <updated>2014-12-11T23:28:36+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/12/11/international-space-station-attacked-by-virus-epidemics</id>
    
      <content type="html"><![CDATA[<p><blockquote><p>In May, the United Space Alliance, which oversees the running of if the <abbr title="International Space Station">ISS</abbr> in orbit, migrated all the computer systems related to the <a href="http://www.theguardian.com/technology/blog/2013/may/13/technology-links-newsbucket">ISS over to Linux</a> for security, stability and reliability reasons.</p><footer><strong>Samuel Gibbs</strong> <cite><a href='http://goo.gl/Lrgr7R'>International Space Station Attacked by ‘virus Epidemics’</a></cite></footer></blockquote></p>

<p>That’s why I still use a GNU/Linux desktop despite the myth that it’s
difficult to use.<sup id="fnref:myth"><a href="#fn:myth" class="footnote">1</a></sup></p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:myth">

      <p>Refer to “Myth 1: Linux is just for geeks” in
<a href="http://fossmaniac.hubpages.com/hub/Linux-vs-Other-Operating-Systems-7-common-myths-busted#mod_12414790"><em>Linux vs Other Operating Systems : 7 common myths busted</em></a>
by fossmaniac for details. <a href="#fnref:myth" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
<p><a rel="full-article" href="http://vincenttam.github.io/blog/2014/12/11/international-space-station-attacked-by-virus-epidemics/">&infin; Permalink</a></p>]]></content>
    
  </entry>
  
</feed>
