<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Blog 1]]></title>
  <link href="http://vincenttam.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://vincenttam.github.io/"/>
  <updated>2015-02-15T13:52:08+08:00</updated>
  <id>http://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Let TTY Remember SSH Passphrase]]></title>
      <link href="http://vincenttam.github.io/blog/2015/02/15/let-tty-remember-ssh-passphrase/"/>
    
    <updated>2015-02-15T09:20:08+08:00</updated>
    <id>http://vincenttam.github.io/blog/2015/02/15/let-tty-remember-ssh-passphrase</id>
    
      <content type="html"><![CDATA[<h2 id="problem">Problem</h2>

<p>After I’ve written posts for this blog, I would like to publish them
by <code>rake deploy</code>, but I was prompted to type my passphrase for
<code>~/.ssh/id_rsa</code> for <em>multiple times</em> in Linux text mode.<sup id="fnref:problem"><a href="#fn:problem" class="footnote">1</a></sup>
(In GNOME shell, this <em>won’t</em> be a problem.)</p>

<p>In fact, this problem can be generalised to the following one: <strong>What
can be done so that the terminal <em>only</em> asks for the <abbr title="Secure SHell">SSH</abbr> passphrase
for the <em>first</em> Git push to a remote server</strong>?</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>I searched “linux tty remember ssh passphrase” and I found the answer
on Ask Ubuntu.<sup id="fnref:sol"><a href="#fn:sol" class="footnote">2</a></sup>  I then looked at the top of the man page of
<code>ssh-agent</code> so as to avoid doing something <em>wrong</em>.  After that, I
used <code>ps</code> to convince myself that the argument that followed
<code>ssh-agent</code> should be <code>bash</code>.  After inputting the correct <abbr title="Secure SHell">SSH</abbr>
passphrase, I could push my Git commits to the remote server <em>without</em>
any further authentication.<sup id="fnref:eg"><a href="#fn:eg" class="footnote">3</a></sup></p>

<h2 id="using-it-with-byobu">Using it with byobu</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left"> </th>
      <th style="text-align: left">Case 1</th>
      <th style="text-align: left">Case 2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Right passphrase entered</td>
      <td style="text-align: left">outside Byobu</td>
      <td style="text-align: left">inside Byobu</td>
    </tr>
    <tr>
      <td style="text-align: left">Git push</td>
      <td style="text-align: left">inside Byobu</td>
      <td style="text-align: left">outside Byobu</td>
    </tr>
    <tr>
      <td style="text-align: left">Enter passphrase again?</td>
      <td style="text-align: left">No</td>
      <td style="text-align: left">Yes<sup id="fnref:eg2"><a href="#fn:eg2" class="footnote">4</a></sup></td>
    </tr>
  </tbody>
</table>

<p>After I’ve entered the <em>right</em> passphrase, even though I type <code>ssh-add
~/.ssh/id_rsa</code> and give the <em>wrong</em> passphrase, I can still use the
key <em>without</em> supplying the correct passphrase again.<sup id="fnref:eg3"><a href="#fn:eg3" class="footnote">5</a></sup></p>

<hr />

<div id="b4" class="noscr">
  <h3 id="typical-bashs-output">Typical bash’s output</h3>

  <p>During <code>rake deploy</code>, I need to enter the passphrase for <em>three</em>
times.</p>

  <pre class="cliUB"><code>$ git push; rake deploy; rake notify
Enter passphrase for key '/home/owner/.ssh/id_rsa':
Counting objects: 5, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 1.32 KiB | 0 bytes/s, done.
Total 5 (delta 3), reused 0 (delta 0)
To git@github.com:VincentTam/vincenttam.github.io.git
   79108e1..9aa4bc3  source -&gt; source
cp -r source/fancybox/.gitattributes public/fancybox/.gitattributes
## Deploying branch to Github Pages
## Pulling any updates from Github Pages
cd _deploy
Enter passphrase for key '/home/owner/.ssh/id_rsa':
remote: Counting objects: 10, done.
remote: Compressing objects: 100% (10/10), done.
remote: Total 10 (delta 3), reused 0 (delta 0)
Unpacking objects: 100% (10/10), done.
From github.com:vincenttam/vincenttam.github.io
   50f426a..9aa4bc3  source     -&gt; origin/source
Already up-to-date.
cd -
rm -rf _deploy/fancybox
rm -rf _deploy/sitemap.xml
rm -rf _deploy/posts
rm -rf _deploy/favicon.png
rm -rf _deploy/blog
rm -rf _deploy/stylesheets
rm -rf _deploy/index.html
rm -rf _deploy/downloads
rm -rf _deploy/robots.txt
rm -rf _deploy/javascripts
rm -rf _deploy/images
rm -rf _deploy/404.html
rm -rf _deploy/assets
rm -rf _deploy/atom.xml
rm -rf _deploy/about

## Copying public to _deploy
cp -r public/. _deploy
cd _deploy

## Committing: Site updated at 2015-02-14 05:57:32 UTC
[master f8b161d] Site updated at 2015-02-14 05:57:32 UTC
 337 files changed, 3689 insertions(+), 2382 deletions(-)
 rewrite assets/jwplayer/glow/controlbar/fullscreenButtonOver.png (98%)
 rewrite assets/jwplayer/glow/controlbar/muteButtonOver.png (99%)
 rewrite assets/jwplayer/glow/controlbar/normalscreenButtonOver.png (98%)
 rewrite assets/jwplayer/glow/controlbar/pauseButtonOver.png (98%)
 rewrite assets/jwplayer/glow/controlbar/unmuteButtonOver.png (98%)
 rewrite assets/jwplayer/glow/display/background.png (98%)
 rewrite assets/jwplayer/glow/display/bufferIcon.png (99%)
 rewrite assets/jwplayer/glow/display/playIcon.png (98%)
 rewrite assets/jwplayer/glow/dock/button.png (98%)
 rewrite assets/jwplayer/glow/sharing/embedIcon.png (98%)
 rewrite assets/jwplayer/glow/sharing/embedScreen.png (99%)
 rewrite assets/jwplayer/glow/sharing/shareIcon.png (98%)
 rewrite assets/jwplayer/glow/sharing/shareScreen.png (99%)
 create mode 100644 blog/2015/02/14/tried-range-based-for-loop/index.html
 create mode 100644 blog/categories/c-plus-plus/atom.xml
 create mode 100644 blog/categories/c-plus-plus/index.html
 rewrite favicon.png (98%)
 rewrite images/bird_32_gray.png (99%)
 rewrite images/bird_32_gray_fail.png (98%)
 rewrite images/line-tile.png (68%)
 rewrite images/noise.png (99%)
 rewrite images/rss.png (98%)

## Pushing generated _deploy website
Enter passphrase for key '/home/owner/.ssh/id_rsa':
Counting objects: 752, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (498/498), done.
Writing objects: 100% (752/752), 388.87 KiB | 0 bytes/s, done.
Total 752 (delta 311), reused 48 (delta 0)
To git@github.com:vincenttam/vincenttam.github.io.git
   95131a7..f8b161d  master -&gt; master

## Github Pages deploy complete
cd -
* Pinging ping-o-matic
* Pinging Google about our sitemap
* Pinging Bing about our sitemap
</code></pre>
</div>

<div id="after" class="noscr">
  <h3 id="an-example-of-letting-the-terminal-remember-the-passphrase">An example of letting the terminal remember the passphrase</h3>

  <pre class="cliUB"><code>$ ssh-agent bash
$ ssh-add ~/.ssh/id_rsa
Enter passphrase for /home/owner/.ssh/id_rsa:
Identity added: /home/owner/.ssh/id_rsa (/home/owner/.ssh/id_rsa)
$ git commit -a
[source 9579dce] Shortened some links and added highlighting
 2 files changed, 3 insertions(+), 3 deletions(-)
$ git push
Counting objects: 6, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 598 bytes | 0 bytes/s, done.
Total 6 (delta 5), reused 0 (delta 0)
To git@github.com:VincentTam/vincenttam.github.io.git
   3c1c449..9579dce  source -&gt; source
$ rake gen_deploy
## Generating Site with Jekyll
    write source/stylesheets/screen.css
Configuration file: /home/owner/octopress/_config.yml
            Source: source
       Destination: public
      Generating...
                    done.
 Auto-regeneration: disabled. Use --watch to enable.
cp -r source/fancybox/.gitattributes public/fancybox/.gitattributes
## Deploying branch to Github Pages
## Pulling any updates from Github Pages
cd _deploy
remote: Counting objects: 11, done.
remote: Compressing objects: 100% (6/6), done.
remote: Total 11 (delta 9), reused 7 (delta 5)
Unpacking objects: 100% (11/11), done.
From github.com:vincenttam/vincenttam.github.io
   7f470b7..9579dce  source     -&gt; origin/source
Already up-to-date.
cd -
rm -rf _deploy/fancybox
rm -rf _deploy/sitemap.xml
rm -rf _deploy/posts
rm -rf _deploy/favicon.png
rm -rf _deploy/blog
rm -rf _deploy/stylesheets
rm -rf _deploy/index.html
rm -rf _deploy/downloads
rm -rf _deploy/robots.txt
rm -rf _deploy/javascripts
rm -rf _deploy/images
rm -rf _deploy/404.html
rm -rf _deploy/assets
rm -rf _deploy/atom.xml
rm -rf _deploy/about

## Copying public to _deploy
cp -r public/. _deploy
cd _deploy

## Committing: Site updated at 2015-02-14 17:47:44 UTC
[master 26aef9c] Site updated at 2015-02-14 17:47:44 UTC
 31 files changed, 44 insertions(+), 45 deletions(-)

## Pushing generated _deploy website
Counting objects: 69, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (66/66), done.
Writing objects: 100% (69/69), 5.57 KiB | 0 bytes/s, done.
Total 69 (delta 35), reused 0 (delta 0)
To git@github.com:vincenttam/vincenttam.github.io.git
   eb76bf3..26aef9c  master -&gt; master

## Github Pages deploy complete
cd -
</code></pre>
</div>

<div id="eg2" class="noscr">
  <p>Inside Byobu, I entered the <em>right</em> passphrase.</p>

  <pre class="cliUB"><code>$ ssh-agent bash
$ ssh-add ~/.ssh/id_rsa
Enter passphrase for /home/owner/.ssh/id_rsa:
Identity added: /home/owner/.ssh/id_rsa (/home/owner/.ssh/id_rsa)
</code></pre>

  <p>Then, I entered <code>&lt;C-a&gt;d</code>, which is equivalent to <code>byobu detach</code>.
After that, I tried pushing my recent Git commit to GitHub, but I
failed.</p>

  <pre class="cliUB"><code>$ git push
Enter passphrase for key '/home/owner/.ssh/id_rsa':
Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
$ sudo cat /dev/vcs2 &gt; ~/temp_tty2.txt
</code></pre>

  <p>The last command above is for capturing every word into a text file.
The output <code>~/temp_tty2.txt</code> has one <em>single</em> newline character ‘\n’.
Therefore, in Byobu, this can be done more <em>easily</em>: just use <code>&lt;C-a&gt;[</code>
to enter the copy mode, use the whitespace character ‘ ‘ to start a
selection, use <code>&lt;Enter&gt;</code> to copy the highlighted word, and use
<code>&lt;C-a&gt;]</code> to paste the word.  (I <em>assume</em> that the bind-key of Byobu is
set to be <code>&lt;C-a&gt;</code> .)  To cancel a selection, type <code>&lt;Esc&gt;</code>; to quit the
copy mode, type <code>q</code>.</p>

  <p>Once I returned back to Byobu by <code>byobu attach</code>, I can send the
commit via <abbr title="Secure SHell">SSH</abbr>.</p>

  <pre class="cliUB"><code>$ git push
Counting objects: 5, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 425 bytes | 0 bytes/s, done.
Total 5 (delta 4), reused 0 (delta 0)
To git@github.com:VincentTam/vincenttam.github.io.git
   3595d6d..424f978  source -&gt; source
</code></pre>
</div>

<div id="eg3" class="noscr">
  <h3 id="an-example-to-show-that-only-the-first-correct-passphrase-counts">An example to show that only the first correct passphrase counts.</h3>

  <p>I first entered the correct passphrase.</p>

  <pre class="cliUB"><code>$ ssh-agent bash
$ ssh-add ~/.ssh/id_rsa
Enter passphrase for /home/owner/.ssh/id_rsa:
Identity added: /home/owner/.ssh/id_rsa (/home/owner/.ssh/id_rsa)
</code></pre>

  <p>Then I <em>delibrately</em> entered a bad passphrase.</p>

  <pre class="cliUB"><code>$ ssh-add ~/.ssh/id_rsa
Enter passphrase for /home/owner/.ssh/id_rsa:
Bad passphrase, try again for /home/owner/.ssh/id_rsa:
Bad passphrase, try again for /home/owner/.ssh/id_rsa:
Bad passphrase, try again for /home/owner/.ssh/id_rsa:
</code></pre>

  <p>To test if the bad passphrase counts, I made and pushed a Git commit.</p>

  <pre class="cliUB"><code>$ vi Rakefile
</code></pre>

  <p>The commit was made inside Vim, by <a href="https://github.com/tpope/vim-fugitive" title="best Git wrapper">fugitive.vim</a>.</p>

  <pre class="cliUB"><code>$ git push
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 284 bytes | 0 bytes/s, done.
Total 3 (delta 2), reused 0 (delta 0)
To git@github.com:VincentTam/vincenttam.github.io.git
   9579dce..1049c4b  source -&gt; source
</code></pre>

  <p>After supplying a <em>false</em> passphrase, I <em>didn’t</em> expect that I <em>could</em>
push it to GitHub.  Finally, I cleaned up the mess in <code>Rakefile</code>.</p>

  <pre class="cliUB"><code>$ git revert HEAD
[source 3595d6d] Revert "testing"
 1 file changed, 5 insertions(+)
$ git push
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 444 bytes | 0 bytes/s, done.
Total 3 (delta 2), reused 0 (delta 0)
To git@github.com:VincentTam/vincenttam.github.io.git
   1049c4b..3595d6d  source -&gt; source
</code></pre>
</div>
<div class="footnotes">
  <ol>
    <li id="fn:problem">
      <p>See <a href="#b4" class="cliwide">the bash’s sample output</a>. <a href="#fnref:problem" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:sol">
      <p><a href="http://askubuntu.com/a/362287"><em>Enter SSH passphrase once</em></a> on Ask Ubuntu. <a href="#fnref:sol" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:eg">
      <p>See <a href="#after" class="cliwide">the terminal’s output</a>. <a href="#fnref:eg" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:eg2">
      <p>See <a href="#eg2" class="cliwide">the terminal’s output</a>. <a href="#fnref:eg2" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:eg3">
      <p>See <a href="#eg3" class="cliwide">the terminal’s output</a>. <a href="#fnref:eg3" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Use Tmux for Previewing Posts]]></title>
      <link href="http://vincenttam.github.io/blog/2015/02/14/use-tmux-for-previewing-posts/"/>
    
    <updated>2015-02-14T14:04:38+08:00</updated>
    <id>http://vincenttam.github.io/blog/2015/02/14/use-tmux-for-previewing-posts</id>
    
      <content type="html"><![CDATA[<h2 id="problem">Problem</h2>

<p>After I finished an Octopress post, one may check if there’s any error
by previewing the post.  In GUI, it’s easy: just open a new window.
<strong>How about in Linux text mode?</strong></p>

<h2 id="a-so-called-method">A so-called method</h2>

<p>Add an ampersand ‘&amp;’ behind the command for previewing the blog.
However, while viewing the site in a browser, the contents would be
<em>covered</em> by some lines.</p>

<pre class="cliUB"><code>127.0.0.1 - - [14/Feb/2015:13:46:08 +0800] "GET / HTTP/1.1" 200 39685 0.0024
127.0.0.1 - - [14/Feb/2015:13:46:14 +0800] "GET /blog/2015/02/14/tried-range-bas
ed-for-loop/ HTTP/1.1" 200 21821 0.0028
127.0.0.1 - - [14/Feb/2015:13:46:59 +0800] "GET /atom.xml HTTP/1.1" 200 131801 0
.0071
</code></pre>

<p>This can be an inconvenience.  It <em>isn’t</em> hard to log on <em>another TTY</em>
and open the browser there, but one has to type the password
<em>twice</em>—this is <em>still</em> inconvenient.</p>

<h2 id="solution">Solution</h2>

<p>I now use <a href="http://byobu.co" title="a free terminal multiplexer">Byobu</a>, which depends on <a href="http://tmux.sourceforge.net" title="a terminal multiplexer">Tmux</a>, to preview the generated
blog.<sup id="fnref:fig"><a href="#fn:fig" class="footnote">1</a></sup></p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:fig">
      <p>The <a href="/images/posts/Tmux/tmux.png" title="Tmux on Ubuntu" class="fancybox">screenshot</a> of Tmux. <a href="#fnref:fig" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Use Lynx Browser (2): Access Shell]]></title>
      <link href="http://vincenttam.github.io/blog/2015/01/03/use-lynx-browser-2-access-shell/"/>
    
    <updated>2015-01-03T21:26:24+08:00</updated>
    <id>http://vincenttam.github.io/blog/2015/01/03/use-lynx-browser-2-access-shell</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I often use <a href="http://lynx.isc.org/" title="Lynx Browser">Lynx</a> due to several reasons.<sup id="fnref:use_lynx"><a href="#fn:use_lynx" class="footnote">1</a></sup></p>

<h2 id="problem">Problem</h2>

<p>While browsing the Internet with Lynx, one can spawn the shell, so that
one can resume the browsing session after executing some commands.</p>

<p>When one wants to exit the shell invoked by ‘!’ in Lynx, the command
required is the <em>same</em> as the one needed for logging out: <code>exit</code>.
These are pretty <em>easy</em>.</p>

<p>However, in Linux text mode, if one typed some commands and the
contents in the browser were <em>completely</em> covered by the output of
these commands, <strong>how can one distinguishs a shell started by Lynx
from the one that simply exists after one has logged in?</strong></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>At first, I typed <code>ps aux | grep lynx</code> to determine whether Lynx was
running.  After that, I issued <code>ps</code>, and got a small list of running
processes.  Then I tried adding the letters <code>a</code>, <code>u</code>, and <code>x</code> after
the previous command.</p>

<ul>
  <li><code>a</code>: Received processes from all TTY consoles, instead of the
  current one.</li>
  <li><code>x</code>: A <code>STAT</code> column was shown.</li>
  <li><code>u</code>: More details were shown, including the <code>STAT</code> column.</li>
</ul>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:use_lynx">
      <p>See <a href="/blog/2014/06/07/use-lynx-browser/"><em>Use Lynx Browser</em></a> for the reasons. <a href="#fnref:use_lynx" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Git Push to USB]]></title>
      <link href="http://vincenttam.github.io/blog/2015/01/01/git-push-to-usb/"/>
    
    <updated>2015-01-01T22:51:20+08:00</updated>
    <id>http://vincenttam.github.io/blog/2015/01/01/git-push-to-usb</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<ol>
  <li>I created a bare Git repository in my USB stick on GUI.</li>
  <li>I pushed some Git commits to the bare repository in the USB.</li>
</ol>

<p>The commands for the above steps <em>shouldn’t</em> be difficult.  In step 2,
if one sets the upstream repository to the bare repository in the USB,
the command to be issued is even easier: just <code>git push</code> will do, and
the remote and branch names can be omitted.</p>

<h2 id="problem">Problem</h2>

<p>I worked on Linux text mode instead of GUI.  After committing the
changes, I tried pushing them into the bare Git repository in the USB.</p>

<pre class="cliUB"><code>[owner@localhost ~/MATH2220]$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[owner@localhost ~/MATH2220]$ sudo mount -t vfat /dev/sdf1 \
&gt; /media/owner/08F1-B181/
[owner@localhost ~/MATH2220]$ git push
Counting objects: 4, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 551 bytes | 0 bytes/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: error: insufficient permission for adding an object to repository databa
se objects
remote: fatal: failed to write object
error: unpack failed: unpack-objects abnormal exit
To /media/owner/08F1-B181/MATH2220/MATH2220.git
 ! [remote rejected] master -&gt; master (unpacker error)
error: failed to push some refs to '/media/owner/08F1-B181/MATH2220/MATH2220.git
'
</code></pre>

<p><strong>How can I push commits into the USB?</strong></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>I googled “git push usb rejected” for a similar problem, and “linux
text mode git” for a Git tutorial on CLI, but I <em>couldn’t</em> find what I
wanted.  I observed that this <em>wasn’t</em> a problem of Git, but a problem
about file permissions on *nix.</p>

<pre class="cliUB"><code>[owner@localhost ~/MATH2220]$ ll /media/owner/
total 12
drwxr-x---+ 3 root root 4096 Jan  1 21:40 ./
drwxr-xr-x  4 root root 4096 Aug 13 02:09 ../
drwxr-xr-x  2 root root 4096 Jan  1 21:40 08F1-B181/
</code></pre>

<p>Then I changed the search words, and finally found a page on SUSE
Communities.<sup id="fnref:suse"><a href="#fn:suse" class="footnote">1</a></sup>  I read the commands and their descriptions, and
eventually solved the problem.</p>

<p>After I had unmounted the USB drive, I typed the command for mounting
the USB stick again.</p>

<pre class="cliUB"><code>[owner@localhost ~/MATH2220]$ sudo umount /media/owner/08F1-B181/
[owner@localhost ~/MATH2220]$ sudo mount -t vfat -o uid=owner,gid=owner\
&gt; /dev/sdf1 /media/owner/08F1-B181/
[owner@localhost ~/MATH2220]$ git push
Counting objects: 4, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 551 bytes | 0 bytes/s, done.
Total 4 (delta 1), reused 0 (delta 0)
To /media/owner/08F1-B181/MATH2220/MATH2220.git
   9e8e53e..4fa36c7  master -&gt; master
</code></pre>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>One can specify the owner and the user group of the VFAT filesystem to
be mounted with <code>-o uid=foo,gid=bar</code> for USB devices.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:suse">

      <p><a href="https://www.suse.com/communities/conversations/manually-mounting-a-usb-flash-drive-in-linux/"><em>Manually Mount a USB Flash Drive in Linux</em></a> by
coolguys-suse on SUSE Communities. <a href="#fnref:suse" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[An Up-to-date Git on Ubuntu]]></title>
      <link href="http://vincenttam.github.io/blog/2014/12/21/an-up-to-date-git-on-ubuntu/"/>
    
    <updated>2014-12-21T01:03:49+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/12/21/an-up-to-date-git-on-ubuntu</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>Tonight, I read the most recent blog article on
<a href="https://github.com/blog">GitHub’s blog</a>.<sup id="fnref:post"><a href="#fn:post" class="footnote">1</a></sup>  It says that the version of Git Bash
on my M$ Win* 7 is <em>unsafe</em>.  Moreover, it is claimed that
<a href="https://www.gnu.org/gnu/linux-and-gnu.en.html">GNU/Linux</a> computers <em>aren’t</em> affected since they’re case
sensitive.  At first, I believed that I <em>didn’t</em> need to upgrade my
<a href="http://git-scm.com/">Git</a>.  However, after I clicked the link for the announcement of Git
v2.2.1, I checked the version of the <a href="http://git-scm.com/">Git</a> on <a href="http://www.ubuntu.com">Ubuntu</a>, and found out
that it <em>wasn’t</em> the newest one.  The following paragraph convinced me
to get this update on my Ubuntu desktop.</p>

<p><blockquote><p>Even though the issue may not affect Linux users, if you are a hosting service whose users may fetch from your service to Windows or Mac OS X machines, you are strongly encouraged to update to protect such users who use existing versions of Git.</p><footer><strong>Junio C Hamano</strong> <cite><a href='http://article.gmane.org/gmane.linux.kernel/1853266'>[ANNOUNCE] Git v2.2.1 (and Updates to Older Maintenance Tracks)</a></cite></footer></blockquote></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>Add the <abbr title="Personal Package Archive">PPA</abbr> for <a href="http://git-scm.com/">Git</a>.</p>

<pre class="cliUB"><code>$ sudo add-apt-repository ppa:git-core/ppa
[sudo] password for owner:
 The most current stable version of Git for Ubuntu.

For release candidates, go to https://launchpad.net/~git-core/+archive/candidate .
  More info: https://launchpad.net/~git-core/+archive/ubuntu/ppa
Press [ENTER] to continue or Ctrl-C to cancel adding it

gpg: keyring `/tmp/tmplo3t2ozz/secring.gpg' created
gpg: keyring `/tmp/tmplo3t2ozz/pubring.gpg' created
gpg: requesting key E1DF1F24 from hkp server keyserver.ubuntu.com
gpg: /tmp/tmplo3t2ozz/trustdb.gpg: trustdb created
gpg: key E1DF1F24: public key "Launchpad PPA for Ubuntu Git Maintainers" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
OK
</code></pre>

<p>Update the package information and upgrade the file.</p>

<pre class="cliUB"><code>$ sudo apt-get upgrade
Reading package lists... Done
Building dependency tree
Reading state information... Done
Calculating upgrade... Done
The following packages will be upgraded:
  git git-core git-man gitk
4 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 5,604 kB of archives.
After this operation, 1,528 kB of additional disk space will be used.
Do you want to continue? [Y/n] Y
Get:1 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main gitk all 1:2.2.1-0ppa2~ubuntu14.04.1 [704 kB]
Get:2 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git i386 1:2.2.1-0ppa2~ubuntu14.04.1 [3,601 kB]
Get:3 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git-man all 1:2.2.1-0ppa2~ubuntu14.04.1 [1,298 kB]
Get:4 http://ppa.launchpad.net/git-core/ppa/ubuntu/ trusty/main git-core all 1:2.2.1-0ppa2~ubuntu14.04.1 [1,412 B]
Fetched 5,604 kB in 23s (240 kB/s)
(Reading database ... 380182 files and directories currently installed.)
Preparing to unpack .../gitk_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking gitk (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git_1%3a2.2.1-0ppa2~ubuntu14.04.1_i386.deb ...
Unpacking git (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git-man_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking git-man (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Preparing to unpack .../git-core_1%3a2.2.1-0ppa2~ubuntu14.04.1_all.deb ...
Unpacking git-core (1:2.2.1-0ppa2~ubuntu14.04.1) over (1:2.0.4-0ppa1~ubuntu12.04.1) ...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
Setting up git-man (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up git (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up gitk (1:2.2.1-0ppa2~ubuntu14.04.1) ...
Setting up git-core (1:2.2.1-0ppa2~ubuntu14.04.1) ...
</code></pre>

<p>Now, I’ve the newest stable release of <a href="http://git-scm.com/">Git</a>.</p>

<pre class="cliUB"><code>$ git --version
git version 2.2.1
</code></pre>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:post">

      <p><a href="http://article.gmane.org/gmane.linux.kernel/1853266"><em>Vulnerability announced: update your Git clients</em></a> by
Vicent Marti. <a href="#fnref:post" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
