<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mathjax | Blog 1]]></title>
  <link href="https://vincenttam.github.io/blog/categories/mathjax/atom.xml" rel="self"/>
  <link href="https://vincenttam.github.io/"/>
  <updated>2016-10-31T19:11:29+01:00</updated>
  <id>https://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Simple MathJax Template for Basic Linear Programs]]></title>
      <link href="https://vincenttam.github.io/blog/2016/01/09/simple-mathjax-template-for-basic-linear-programs/"/>
    
    <updated>2016-01-09T16:12:24+01:00</updated>
    <id>https://vincenttam.github.io/blog/2016/01/09/simple-mathjax-template-for-basic-linear-programs</id>
    
      <content type="html"><![CDATA[<h2 id="goal">Goal</h2>

<p>To provide a good-looking template of basic linear programs for users
of <a href="http://math.stackexchange.com/">Mathematics Stack Exchange</a>.</p>

<div class="myeqn">
\[
  \begin{array}{cccll}
    \max &amp;z=&amp;x_1&amp;+x_2 &amp; \\
    \text{s.t.}&amp; &amp; &amp; \phantom{+}x_2 + s_1 &amp;= 8 \\
    &amp; &amp; -x_1&amp;+x_2 - s_2&amp;=-4 \\
    &amp; &amp; x_1&amp;+x_2+s_3&amp;= 12 \\
    &amp; &amp; &amp; s_1,s_2,s_3 &amp;\ge 0
  \end{array}
\]
</div>

<!-- more -->

<h2 id="solution">Solution</h2>

<p><figure class='code'><figcaption><span>A minimum working example on Math Stack Exchange </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='tex'><span class='line'><span class="k">\begin</span><span class="nb">{</span>array<span class="nb">}{</span>cccll<span class="nb">}</span>
</span><span class='line'>  <span class="k">\max</span> <span class="nb">&amp;</span>amp;z=<span class="nb">&amp;</span>amp;x<span class="nb">_</span>1<span class="nb">&amp;</span>amp;+x<span class="nb">_</span>2 <span class="nb">&amp;</span>amp; &lt;br /&gt;
</span><span class='line'>  <span class="k">\text</span><span class="nb">{</span>s.t.<span class="nb">}&amp;</span>amp; <span class="nb">&amp;</span>amp; <span class="nb">&amp;</span>amp; <span class="k">\phantom</span><span class="nb">{</span>+<span class="nb">}</span>x<span class="nb">_</span>2 + s<span class="nb">_</span>1 <span class="nb">&amp;</span>amp;= 8 &lt;br /&gt;
</span><span class='line'>  <span class="nb">&amp;</span>amp; <span class="nb">&amp;</span>amp; -x<span class="nb">_</span>1<span class="nb">&amp;</span>amp;+x<span class="nb">_</span>2 - s<span class="nb">_</span>2<span class="nb">&amp;</span>amp;=-4 &lt;br /&gt;
</span><span class='line'>  <span class="nb">&amp;</span>amp; <span class="nb">&amp;</span>amp; x<span class="nb">_</span>1<span class="nb">&amp;</span>amp;+x<span class="nb">_</span>2+s<span class="nb">_</span>3<span class="nb">&amp;</span>amp;= 12 &lt;br /&gt;
</span><span class='line'>  <span class="nb">&amp;</span>amp; <span class="nb">&amp;</span>amp; <span class="nb">&amp;</span>amp; s<span class="nb">_</span>1,s<span class="nb">_</span>2,s<span class="nb">_</span>3 <span class="nb">&amp;</span>amp;<span class="k">\ge</span> 0
</span><span class='line'><span class="k">\end</span><span class="nb">{</span>array<span class="nb">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2 id="inadequacies">Inadequacies</h2>

<p>If you want a prettier template, you may see
<a href="http://tex.stackexchange.com/q/75108">this $\rm TeX$–$\rm \LaTeX$ Stack Exchange question</a>.  I
tried added <code>@{}</code> in the first argument of the <code>array</code> environment to
eliminate the excessive inter-column space—this works great in $\rm
\LaTeX$.  However, neither <code>@{}</code> nor <code>\multicolumn{4}{l}{...}</code> is
processed by <a href="https://mathjax.org">MathJax</a>.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Display of Calligraphic Font by MathJax in Chromium]]></title>
      <link href="https://vincenttam.github.io/blog/2015/12/24/display-of-calligraphic-font-by-mathjax-in-chromium/"/>
    
    <updated>2015-12-24T06:05:30+01:00</updated>
    <id>https://vincenttam.github.io/blog/2015/12/24/display-of-calligraphic-font-by-mathjax-in-chromium</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<h3 id="css-style-of-this-blog">CSS style of this blog</h3>

<p>I use <a href="http://erikzaadi.com/2012/04/22/solarized-color-scheme-for-octopress/" title="Source code of Solarized theme for Octopress">Solarized</a> theme with light background.  <abbr title="In my humble opinion">IMHO</abbr>, it is less
tiring to look at a light background.  I’ve chosen pink as the text
colour.</p>

<h3 id="contents-of-this-blog">Contents of this blog</h3>

<p>Apart from technical stuff, I often post math containing calligraphic
font, for example</p>

<ol>
  <li><a href="/blog/2014/06/17/injectivity-of-stable-mappings/"><em>Injectivity of Stable Mappings</em></a></li>
  <li><a href="/blog/2014/06/18/definition-of-content-0-sets/"><em>Definition of Content 0 Sets</em></a></li>
  <li><a href="/blog/2014/06/19/archimedean-sequence-of-partitions-of-a-square/"><em>Archimedean Sequence of Partitions of a Square</em></a></li>
  <li><a href="/blog/2014/11/08/composition-of-limits/"><em>Composition of Limits</em></a></li>
</ol>

<p>I used Mozilla Firefox, and I <em>didn’t</em> see problem on the display of
<code>\mathcal</code>.</p>

<h2 id="problem">Problem</h2>

<p>Three months ago, I wrote something about Zorn’s Lemma and Hausdorff
spaces.  In the post <a href="/blog/2015/09/28/normal-compact-t2-spaces/"><em>Normal Compact $T_2$ Spaces</em></a>, I observed
that the math display was <em>abnormal</em>.  Due to homework and exams, I
delayed the investigation into this technical problem.</p>

<p><img src="/images/posts/Mathcal/err.png" alt="mathcal display error" title="mathcal display error" /></p>

<p>Normally, the foreground colour of the math expression is the <em>same</em>
as that of normal inline text.  In the above figure, <span class="myeqn">"$T_2$" is in pink.  However, $U_y,
V_y$</span> <em>aren’t</em>.</p>

<!-- more -->

<h2 id="discussion">Discussion</h2>

<h3 id="look-into-the-code">Look into the code</h3>

<p>It is normal for me to inspect the HTML elements.</p>

<h4 id="element-inspected">Element inspected</h4>

<p><img src="/images/posts/Mathcal/img.png" alt="HTML element inspected" title="HTML element inspected" /></p>

<h4 id="interpreted-html-in-chromium">Interpreted HTML in Chromium</h4>

<p><img src="/images/posts/Mathcal/inspect.png" alt="HTML code in the inspector" title="HTML code shown" /></p>

<p>The above math expression is in <em>black</em> rather than <em>pink</em> because it
is rendered as a <abbr title="Portable Network Graphics">PNG</abbr> <em>image</em>.</p>

<p>I confirmed this by looking at the list of loaded resources.</p>

<p><img src="/images/posts/Mathcal/png-list.png" alt="list of loaded PNG" title="list of loaded PNG" /></p>

<h3 id="is-this-problem-browser-specific">Is this problem browser-specific?</h3>

<p>I tried opening <a href="/blog/2015/09/28/normal-compact-t2-spaces/">the blog article</a> in Mozilla Firefox, and I
<em>didn’t</em> see any problem.</p>

<picture class="fancybox" title="result in Firefox">
  <source srcset="/images/posts/Mathcal/ff487.png" media="(min-width: 490px)" />
  <img alt="result in Firefox" src="https://vincenttam.github.io/images/posts/Mathcal/ff300.png" />
</picture>

<h2 id="cause">Cause</h2>

<p>Based on the above observations, I suspected that the presence of a
calligraphic font triggered this fallback of fonts.  In order to test
this, I did an experiment on my local MathJax test page:  I had a math
expression containing <code>\mathcal</code> and one without.  I put them in
different order, and observed the difference in the loaded <abbr title="Portable Network Graphics">PNG</abbr>.</p>

<h3 id="calligraphic-font-at-the-bottom">Calligraphic font at the bottom</h3>

<picture class="fancybox" title="Visual effect of \mathcal at the
bottom">
  <source srcset="/images/posts/Mathcal/view1-364.png" media="(min-width: 370px)" />
  <img alt="Visual effect of \mathcal at the bottom" src="https://vincenttam.github.io/images/posts/Mathcal/view1-300.png" />
</picture>

<p><img src="/images/posts/Mathcal/b4cal.png" alt="PNG list when \mathcal at last" title="PNG list when \mathcal at last" /></p>

<p>Only the curly ‘C’ is loaded as <abbr title="Portable Network Graphics">PNG</abbr>, while the rest <em>aren’t</em>.</p>

<p><figure class='code'><figcaption><span>Source code for the above sample page (b4cal.html)</span> <a href='/downloads/code/mathcal/b4cal.html'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;</span>
</span><span class='line'><span class="cp">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;content-type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>Don&#39;t delete!<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;myeqn&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>\begin{align*}
</span><span class='line'>  <span class="ni">&amp;\quad\;</span> \abs{x + i \sqrt{1 - x^2} \cos{\theta}}\\
</span><span class='line'>  =<span class="err">&amp;</span> \sqrt{x^2 + (1 - x^2) \cos^2{\theta}}\\
</span><span class='line'>  \le<span class="err">&amp;</span> \sqrt{x^2 + (1 - x^2)}\\
</span><span class='line'>  =<span class="err">&amp;</span> 1.
</span><span class='line'>\end{align*}
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Don&#39;t need to go to MathJax CDN Sample --&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>$\mathcal{C}$<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">getScript</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">success</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">script</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">head</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">done</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nx">done</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;loaded&#39;</span>
</span><span class='line'>          <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;complete&#39;</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">done</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">success</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">head</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nx">head</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">getScript</span><span class="p">(</span><span class="s2">&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?&quot;</span> <span class="o">+</span>
</span><span class='line'>    <span class="s2">&quot;config=TeX-AMS-MML_HTMLorMML&quot;</span> <span class="o">+</span>
</span><span class='line'>    <span class="s2">&quot;,https://vincenttam.github.io/javascripts/MathJaxLocal.js&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="kd">function</span><span class="p">(){});</span>
</span><span class='line'>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="calligraphic-font-at-the-bottom-1">Calligraphic font at the bottom</h3>

<picture class="fancybox" title="Visual effect of \mathcal at the
top">
  <source srcset="/images/posts/Mathcal/view2-364.png" media="(min-width: 370px)" />
  <img alt="Visual effect of \mathcal at the top" src="https://vincenttam.github.io/images/posts/Mathcal/view2-300.png" />
</picture>

<p><img src="/images/posts/Mathcal/cal1st.png" alt="PNG list when \mathcal at first" title="PNG list when \mathcal at first" /></p>

<p>Everything (after the curly ‘C’) are loaded as <abbr title="Portable Network Graphics">PNG</abbr>.</p>

<p><figure class='code'><figcaption><span>Source code for the above sample page (cal1st.html)</span> <a href='/downloads/code/mathcal/cal1st.html'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;</span>
</span><span class='line'><span class="cp">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;content-type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>Don&#39;t delete!<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- Don&#39;t need to go to MathJax CDN Sample --&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>$\mathcal{C}$<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;myeqn&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>\begin{align*}
</span><span class='line'>  <span class="ni">&amp;\quad\;</span> \abs{x + i \sqrt{1 - x^2} \cos{\theta}}\\
</span><span class='line'>  =<span class="err">&amp;</span> \sqrt{x^2 + (1 - x^2) \cos^2{\theta}}\\
</span><span class='line'>  \le<span class="err">&amp;</span> \sqrt{x^2 + (1 - x^2)}\\
</span><span class='line'>  =<span class="err">&amp;</span> 1.
</span><span class='line'>\end{align*}
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">getScript</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">success</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">script</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">head</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">done</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nx">done</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;loaded&#39;</span>
</span><span class='line'>          <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;complete&#39;</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">done</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">success</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">head</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nx">head</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">getScript</span><span class="p">(</span><span class="s2">&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?&quot;</span> <span class="o">+</span>
</span><span class='line'>    <span class="s2">&quot;config=TeX-AMS-MML_HTMLorMML&quot;</span> <span class="o">+</span>
</span><span class='line'>    <span class="s2">&quot;,https://vincenttam.github.io/javascripts/MathJaxLocal.js&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="kd">function</span><span class="p">(){});</span>
</span><span class='line'>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Therefore, my claim is verified.  <em>Unluckily</em>, I failed to find any
solution to this problem on Google.</p>

<h2 id="reasons-for-not-finding-a-solution">Reasons for <em>not</em> finding a solution</h2>

<ol>
  <li>This problem <em>doesn’t</em> affect the content.</li>
  <li>This problem is browser-specific—it <em>doesn’t</em> appear in Mozilla
Firefox.</li>
  <li>It is possible that this issue will be automatically fixed by a
future upgrade, and a solution of this problem will be transient.</li>
</ol>

<p>I’ve better solve math problems instead of technical ones since math
is always true.</p>

<h2 id="some-off-topic-stuff">Some off-topic stuff</h2>

<p>I started writing this post on Christmas Eve, and I finished it at
Christmas.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[MathJax Local Configuration File (2)]]></title>
      <link href="https://vincenttam.github.io/blog/2015/09/06/mathjax-local-configuration-file-2/"/>
    
    <updated>2015-09-06T13:29:42+02:00</updated>
    <id>https://vincenttam.github.io/blog/2015/09/06/mathjax-local-configuration-file-2</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>In my opinion, the default display of the $\rm \LaTeX$ command for
$\Re z$ and $\Im z$ <em>don’t</em> look good.</p>

<p><img src="/images/posts/MathJaxReIm/im110.png" alt="default Im(z) display" /></p>

<h2 id="problem">Problem</h2>

<p>I want to reset the <code>\Im</code> command in my local MathJax configuration
file <code>source/javascripts/MathJaxLocal.js</code>.  I used a script inside the
<code>&lt;body&gt;</code> tag to load my local MathJax configurations from GitHub.<sup id="fnref:pp"><a href="#fn:pp" class="footnote">1</a></sup>
If I want to <em>test</em> the configurations, then I’ll have to push my
changes to GitHub <em>before</em> I can see the effect and figure out the
errors — this is incredibly <em>slow</em> and <em>inefficient</em>.</p>

<p><strong>How can I locally debug my MathJax configurations?</strong></p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>To <em>locally test</em> my MathJax configurations, I put <em>another</em> <code>&lt;script&gt;</code>
tag containing the local configurations <em>before</em> the <code>&lt;script&gt;</code> that
loads <code>MathJax.js</code>.</p>

<p><figure class='code'><figcaption><span>Put this at the bottom </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/x-mathjax-config&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nx">MathJax</span><span class="p">.</span><span class="nx">Hub</span><span class="p">.</span><span class="nx">Config</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">jax</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;input/TeX&quot;</span><span class="p">,</span> <span class="s2">&quot;output/HTML-CSS&quot;</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">tex2jax</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">inlineMath</span><span class="o">:</span> <span class="p">[[</span><span class="s1">&#39;$&#39;</span><span class="p">,</span> <span class="s1">&#39;$&#39;</span><span class="p">]],</span>
</span><span class='line'>    <span class="nx">displayMath</span><span class="o">:</span> <span class="p">[[</span><span class="s1">&#39;$$&#39;</span><span class="p">,</span> <span class="s1">&#39;$$&#39;</span><span class="p">],[</span><span class="s1">&#39;\\[&#39;</span><span class="p">,</span><span class="s1">&#39;\\]&#39;</span><span class="p">]],</span>
</span><span class='line'>    <span class="nx">processEscapes</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">skipTags</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;script&#39;</span><span class="p">,</span> <span class="s1">&#39;noscript&#39;</span><span class="p">,</span> <span class="s1">&#39;style&#39;</span><span class="p">,</span> <span class="s1">&#39;textarea&#39;</span><span class="p">,</span> <span class="s1">&#39;pre&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">]</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">messageStyle</span><span class="o">:</span> <span class="s2">&quot;none&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;HTML-CSS&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">preferredFont</span><span class="o">:</span> <span class="s2">&quot;TeX&quot;</span><span class="p">,</span> <span class="nx">availableFonts</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;STIX&quot;</span><span class="p">,</span><span class="s2">&quot;TeX&quot;</span><span class="p">]</span> <span class="p">},</span>
</span><span class='line'>  <span class="nx">TeX</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">equationNumbers</span><span class="o">:</span> <span class="p">{</span> <span class="nx">autoNumber</span><span class="o">:</span> <span class="s2">&quot;AMS&quot;</span> <span class="p">},</span>
</span><span class='line'>    <span class="nx">extensions</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;AMSmath.js&quot;</span><span class="p">,</span> <span class="s2">&quot;AMSsymbols.js&quot;</span><span class="p">,</span><span class="s2">&quot;AMScd.js&quot;</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">TagSide</span><span class="o">:</span> <span class="s2">&quot;left&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">Macros</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">field</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;\\mathbb{#1}&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">C</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;\\field{C}&#39;</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">F</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;\\field{F}&#39;</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">N</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;\\field{N}&#39;</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">Q</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;\\field{Q}&#39;</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">R</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;\\field{R}&#39;</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">Z</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;\\field{Z}&#39;</span><span class="p">],</span><span class="nt">&lt;/script&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>  zeros: [&#39;\\mathbf{0}&#39;],
</span><span class='line'>  ud: [&#39;\\,\\mathrm{d}&#39;],
</span><span class='line'>
</span><span class='line'>  vect:[&#39;\\boldsymbol{\\mathbf{#1}}&#39;,1],
</span><span class='line'>  abs: [&#39;\\lvert#1\\rvert&#39;, 1],
</span><span class='line'>  abslr:[&#39;\\left\\lvert#1\\right\\rvert&#39;, 1],
</span><span class='line'>  norm: [&#39;\\lVert#1\\rVert&#39;, 1],
</span><span class='line'>  normlr: [&#39;\\left\\lVert#1\\right\\rVert&#39;, 1],
</span><span class='line'>
</span><span class='line'>  lcm: [&#39;\\mathop{\\mathrm{lcm}}&#39;],
</span><span class='line'>  interior: [&#39;\\mathop{\\mathrm{int}}&#39;],
</span><span class='line'>  exterior: [&#39;\\mathop{\\mathrm{ext}}&#39;],
</span><span class='line'>  volume: [&#39;\\mathop{\\mathrm{vol}}&#39;],
</span><span class='line'>
</span><span class='line'>  E: [&#39;{\\rm I\\kern-.3em E}&#39;],
</span><span class='line'>  Var: [&#39;\\mathop{\\mathrm{Var}}&#39;],
</span><span class='line'>  Cov: [&#39;\\mathop{\\mathrm{Cov}}&#39;],
</span><span class='line'>  Binom: [&#39;\\mathop{\\mathrm{Binom}}&#39;],
</span><span class='line'>  Exp: [&#39;\\mathop{\\mathrm{Exp}}&#39;],
</span><span class='line'>  Poi: [&#39;\\mathop{\\mathrm{Poi}}&#39;],
</span><span class='line'>
</span><span class='line'>  GL: [&#39;\\mathrm{GL}&#39;],
</span><span class='line'>  SL: [&#39;\\mathrm{SL}&#39;],
</span><span class='line'>  Aut: [&#39;\\mathrm{Aut}&#39;],
</span><span class='line'>  id: [&#39;\\mathrm{id}&#39;],
</span><span class='line'>
</span><span class='line'>  // Test your code here
</span><span class='line'>  Re: [&#39;\\mathop{\\mathrm{Re}}&#39;],
</span><span class='line'>  Im: [&#39;\\mathop{\\mathrm{Im}}&#39;],
</span><span class='line'>}   } }); <span class="ni">&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">getScript</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">success</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">script</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">head</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">done</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nx">done</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;loaded&#39;</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;complete&#39;</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">done</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">success</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">head</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nx">head</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">getScript</span><span class="p">(</span><span class="s2">&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?&quot;</span> <span class="o">+</span>
</span><span class='line'>    <span class="s2">&quot;config=TeX-AMS-MML_HTMLorMML&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){});</span>
</span><span class='line'>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>I think that rendering $\Re z$ and $\Im z$ with roman font is better.</p>

<p><img src="/images/posts/MathJaxReIm/im-new120.png" alt="improved Im(z) display" /></p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:pp">

      <p>Refer to <a href="/blog/2015/08/05/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3/">my old post</a> titled <em>A Quick Markdown Syntax Error
Detection for Writing MathJax Equations in Octopress Posts (3)</em>
for details. <a href="#fnref:pp" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[A Quick Markdown Syntax Error Detection for Writing MathJax Equations in Octopress Posts (3)]]></title>
      <link href="https://vincenttam.github.io/blog/2015/08/04/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3/"/>
    
    <updated>2015-08-04T18:18:45+02:00</updated>
    <id>https://vincenttam.github.io/blog/2015/08/04/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I often write math in this blog.  After typing lots of characters,
syntax errors are <em>inevitable</em>, but no one wants them to be published.
Unluckily, the <code>rake generate</code> command takes <em>too long</em> to run.  In
order to find them out more quickly, I quickly went over the
<code>Gemfile</code> of the repository for this blog, and saw that the Markdown
engine of Octopress is kramdown.  Therefore, I used the command line
version of this Markdown parser to convert my Markdown source file to
an HTML document by a Vim Ex command.</p>

<pre><code>:!kramdown % &gt; %&lt;.html
</code></pre>

<p>For this, I’ve written two posts describing the workflow of producing
HTML web pages consisting of math expressions from Markdown source
files using kramdown and MathJax.</p>

<h2 id="problem">Problem</h2>

<p>In <a href="/blog/2014/12/10/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-1/">the first post</a> in this series, I’ve made a list of steps
in Vim.  However, jumping to other files is laborious.  More
importantly, those steps involve browsing and copying of lines of
HTML code of the <code>&lt;head&gt;</code>, which loads MathJax, in other HTML files.
This can <em>seriously</em> slow down the editing process.  Unhappily, this
problem <em>isn’t</em> solved in <a href="/blog/2014/12/13/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-2/">the second post</a> in this series.</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<h3 id="include-the-script-in-the-content">Include the script in the content</h3>

<p>There might be some option for the kramdown command line utility to
use accept an HTML template files during the code conversion.
However, I’m <em>too lazy</em> to search for them as I need to work on
math.<sup id="fnref:pp1"><a href="#fn:pp1" class="footnote">1</a></sup></p>

<p>Remembering that I defered the loading of JavaScripts in order to
boost the PageSpeed score of this site, I adpated the script to load
MathJax instead of fancyBox in my draft markdown file.<sup id="fnref:pp2"><a href="#fn:pp2" class="footnote">2</a></sup></p>

<p><figure class='code'><figcaption><span>Put this at the bottom </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">getScript</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">success</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">script</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">head</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">done</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nx">done</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;loaded&#39;</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;complete&#39;</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">done</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">success</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">head</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nx">head</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span><span class="nt">&lt;/script&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>getScript(“https://cdn.mathjax.org/mathjax/latest/MathJax.js?” +
</span><span class='line'>    “config=TeX-AMS-MML_HTMLorMML” +
</span><span class='line'>    “,https://vincenttam.github.io/javascripts/MathJaxLocal.js”,
</span><span class='line'>    function(){});<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>})();
</span><span class='line'><span class="ni">&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="a-problem-with-vims-folding-arised">A problem with Vim’s folding arised</h3>

<p>By default, with the plugin <code>vim-markdown</code> installed, the sections are
<em>folded</em>.  Before I can continue editing at the end of the file, I
have to open the last fold, which contained more than 25 lines due to
the script enabling MathJax at the bottom.  As a result, I have to
move back to the middle of the last fold by pressing <code>k</code> for a while.
That annoys me.  If the script is contained in a separate fold, it’s
better.  Therefore, adding a blank line and then a line consisting of
three hyphens will fix this problem.</p>

<h2 id="inadequacies">Inadequacies</h2>

<hr />
<p>(Added on SEP 3RD, 2015)</p>

<p>Now I realised that kramdown will leave the trailing two backslashes
at each line inside <code>&lt;div&gt;</code> tags in Markdown source files <em>untouched</em>.</p>

<hr />

<p>In <a href="/blog/2014/12/13/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-2/">the second post</a> in this series, we know that <code>&lt;div&gt;</code> tag
prevents kramdown from converting the code inside the tag to HTML,
while in <a href="/blog/2014/09/14/kramdowns-markdown-attributes/">another old post about kramdown’s Markdown attributes</a>,
one can revert the above behaviour by simply adding an attribute
<code>markdown="1"</code> to the <code>&lt;div&gt;</code> tag.  These can be reflected in the
above test.</p>

<p>Usually, in math environments inside a $\rm \LaTeX$ document, double
backslashes <code>\\</code> start a new line, and it’s the same in MathJax.
Typing <em>two</em> backslashes in the Markdown source down will suffice.
Unluckily, in the <em>real Markdown source</em> for Octopress posts, <em>four</em>
<code>\</code> are needed.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:pp1">

      <p>For example, I have to think about
<a href="/blog/2015/08/04/some-thoughts-on-a-real-valued-function/">multi-variable real-valued functions</a>. <a href="#fnref:pp1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:pp2">

      <p>Refer to my old post
<a href="/blog/2014/12/29/octopress-pagespeed-jquery-and-fancybox/"><em>Octopress, PageSpeed, jQuery and fancyBox</em></a> in <em>Blog 1</em> for
details. <a href="#fnref:pp2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[A Quick Markdown Syntax Error Detection for Writing MathJax Equations in Octopress Posts (2)]]></title>
      <link href="https://vincenttam.github.io/blog/2014/12/13/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-2/"/>
    
    <updated>2014-12-13T04:06:59+01:00</updated>
    <id>https://vincenttam.github.io/blog/2014/12/13/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-2</id>
    
      <content type="html"><![CDATA[<h2 id="problem">Problem</h2>

<p>In the <a href="/blog/2014/12/10/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-1/">previous post</a> in this series, I’ve listed a number of
steps and included a group of <a href="http://www.vim.org">Vim</a> editor commands for screening out
<a href="http://kramdown.gettalong.org">kramdown</a> syntax errors.  This is useful for <a href="http://octopress.org">Octopress</a> posts with
ordinary contents.  However, if one wants to write some math equations
using <a href="http://www.mathjax.org">MathJax</a>, then one will encounter great difficulties.<sup id="fnref:pp1"><a href="#fn:pp1" class="footnote">1</a></sup></p>

<!-- more -->

<p>Even though the <a href="http://kramdown.gettalong.org">kramdown</a> command line utility enables users to
instantly convert code across different formats, and a web browser
enables them to notice any syntax error, these tools just help them to
find the mistakes, but <em>not</em> the solution.  In the cited post in the
<a href="#fn:pp1">first footnote</a>, I spent <em>hours</em> to realise that <em>exactly
eight ‘\’s</em> were needed to break the current line in <a href="http://www.mathjax.org">MathJax</a>.
After that, I feel that using eight ‘\’s and adding a ‘\’ before a
‘_’ in <a href="http://www.mathjax.org">MathJax</a> equations interrupt my thinking.</p>

<h2 id="solution">Solution</h2>

<p>Reading <a href="/blog/2014/09/13/completely-remove-linux-kernels/" title="Completely Remove Linux Kernels">an old post on removing Linux kernels on Ubuntu</a>, I
remembered that the <code>markdown</code> attribute in <code>&lt;div markdown="1"&gt;</code>
enabled <a href="http://kramdown.gettalong.org">kramdown</a> to interpret the Markdown code within the <code>&lt;div&gt;</code>
block.  Therefore, I tried to surround the HTML code for an inline
math expression with a <code>&lt;span&gt;</code> tag.  Unluckily, unlike <code>&lt;div&gt;</code>
blocks, the surrounded code was <em>still</em> interpreted by <a href="http://kramdown.gettalong.org">kramdown</a>.</p>

<p>After that, I read the syntax documentation.  It claimed that setting
<code>markdown="0"</code> disabled parsing of contents inside the tag <em>except</em>
for <code>&lt;span&gt;</code> tags.<sup id="fnref:doc"><a href="#fn:doc" class="footnote">2</a></sup>  Though the manual says that it’s
<em>impossible</em>, I still inserted it into the <code>&lt;span&gt;</code> tag which
surrounded the code for the <a href="http://www.mathjax.org">MathJax</a> math expression, because it
<em>didn’t</em> take much time to see the result: the inline <a href="http://www.mathjax.org">MathJax</a>
expression could be <em>successfully</em> displayed.<sup id="fnref:pp3"><a href="#fn:pp3" class="footnote">3</a></sup></p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:pp1">
      <p>For example, it’s troublesome to <a href="/blog/2014/09/07/mathjax-and-rss/" title="MathJax and RSS">start a new line</a>. <a href="#fnref:pp1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:doc">

      <p>See the first bullet point of the section “HTML Spans” in
<a href="http://kramdown.gettalong.org/syntax.html#html-spans">kramdown’s syntax documentation</a>. <a href="#fnref:doc" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:pp3">

      <p>See <a href="/blog/2014/12/09/a-group-of-689-elements/"><em>A Group of 689 Elements</em></a> and
<a href="https://github.com/vincenttam/vincenttam.github.io/commit/af4f216">its source code</a> in Blog 1 at commit af4f216 for a
working example. <a href="#fnref:pp3" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
