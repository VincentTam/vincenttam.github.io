<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web Technologies | Blog 1]]></title>
  <link href="https://vincenttam.github.io/blog/categories/web-technologies/atom.xml" rel="self"/>
  <link href="https://vincenttam.github.io/"/>
  <updated>2016-02-27T12:28:34+08:00</updated>
  <id>https://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[Fixed Jekyll-Bootstrap Asset Path]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/15/fixed-jekyll-bootstrap-asset-path/"/>
    
    <updated>2016-02-15T01:18:31+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/15/fixed-jekyll-bootstrap-asset-path</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>As I’ve said in <a href="/blog/2016/02/08/jekyll-blog-page-build-warning/"><em>Jekyll Blog Page Build Warning</em></a>,
<a href="https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0">GitHub Pages have upgraded to 3.0</a>.</p>

<h2 id="problem">Problem</h2>

<p>The Twitter theme for every post in <a href="/blog2">Blog 2</a> was <em>gone</em>, but
the home page and the archive page still looked good.</p>

<p>I viewed <a href="https://github.com/plusjade/jekyll-bootstrap">Jekyll-Bootstrap</a>’s <a href="https://github.com/plusjade/jekyll-bootstrap/issues">issue list</a>.  The
”{{ ASSET_PATH }}” in the title of
<a href="https://github.com/plusjade/jekyll-bootstrap/issues/295">issue #295</a> caught my eyes.  Feeling that changing
<code>_config.yml</code> is too troublesome and prone to error, I clicked some
links for related web pages, such as
<a href="http://jekyllrb.com/docs/upgrading/2-to-3/#layout-metadata">a relevant page in Jekyll’s documentation</a>, but I <em>didn’t</em> know
what to do.</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>It turns out that this issue is the <em>same</em> as <a href="https://github.com/plusjade/jekyll-bootstrap/issues/290">issue #290</a>.
The status of this issue is <em>closed</em> because some ways of fixing the
problem have been shared.  Since <a href="https://github.com/plusjade/jekyll-bootstrap/pull/293/files">qh’s fix</a> has received
positive comments, I adopt his approach.</p>

<p><a href="/blog/2015/08/06/my-git-command-list-3/">Before learning more Git commands this summer</a>, I would change
this <em>manually</em>.  However, fearing that I would <a href="https://github.com/qh/jekyll-bootstrap/commit/a2526d03dad245ea389c918055ac7fe46948ab1d">make a typo</a>, I
seek an automatic way to apply the changes in <code>_includes/JB/setup</code>.</p>

<p>I searched “git apply patch” on Google, and reached
<a href="http://stackoverflow.com/q/7827002">this Stack Overflow question</a> eventually.  The command</p>

<pre class="cliUB"><code>$ curl https://github.com/JustinTulloss/zeromq.node/pull/47.patch &gt; /tmp/47.patch
</code></pre>

<p>gave me a file (<em>without EOF</em>) in <code>/tmp</code>.</p>

<pre class="cliUB"><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href="https://patch-diff.githubusercontent.com/raw/JustinTulloss/zeromq.node/pull/47.patch"&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;
</code></pre>

<p>I then tried using <code>git apply</code>.</p>

<pre class="cliUB"><code>[owner@localhost ~/blog2]$ git apply --stat /tmp/47.patch
fatal: unrecognized input
</code></pre>

<p>Even though I added the <code>--stat</code> option, the bash still said that it’s
<code>fatal</code>.  I tried googling “git apply fatal”, but I <em>couldn’t</em> see
anything useful.  The third answer to this Stack Overflow question
cleared my doubts: by comparing the date of the answers, one knows
that <code>patch-diff.githubusercontent.com</code> should be used instead.</p>

<p>Since the reputation of the owner of the second answer is higher,
<em>not</em> having enough time to check their differences, I used <code>git am</code>
instead of <code>git apply --check</code>.  Finally, everything went smooth and
the <code>git push</code> was successful.  Originally, I intended to leave a
short Git comment message with a few helpful links.  However,
everything went so good that I <em>didn’t</em> have the chance to do that in
the Git repository for Blog 2.  Therefore, I recorded my thoughts
here.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Jekyll Blog Page Build Warning]]></title>
      <link href="https://vincenttam.github.io/blog/2016/02/08/jekyll-blog-page-build-warning/"/>
    
    <updated>2016-02-08T01:45:25+08:00</updated>
    <id>https://vincenttam.github.io/blog/2016/02/08/jekyll-blog-page-build-warning</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>The page build of Jekyll is quite easy because one <em>doesn’t</em> need to
locally generate the HTML code of the Markdown source with <code>rake</code>.
One just needs to directly save, commit and push the source code
online.  The GitHub page support will handle the rest for you.</p>

<h2 id="problem">Problem</h2>

<p>I wrote <a href="/blog2/essai/2016/02/07/bon-nouvel-an-chinois">an article in my Jekyll blog</a> yesterday afternoon.  From
what was shown in the terminal, the page build was smooth as expected.
Then, I received a warning from <a href="https://github.com">GitHub</a>.</p>

<picture class="fancybox" title="The warning email from GitHub">
  <source srcset="/images/posts/Blog2/email635.png" media="(min-width: 400px)" />
  <img alt="The warning email from GitHub" src="https://vincenttam.github.io/images/posts/Blog2/email300.png" />
</picture>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>The problem can be easily solved: just follow what the email says.
I’ve visited <a href="https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0">this blog article on GitHub</a> to know more about the
GitHub Pages upgrade.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[A Quick Markdown Syntax Error Detection for Writing MathJax Equations in Octopress Posts (3)]]></title>
      <link href="https://vincenttam.github.io/blog/2015/08/05/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3/"/>
    
    <updated>2015-08-05T00:18:45+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/08/05/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-3</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I often write math in this blog.  After typing lots of characters,
syntax errors are <em>inevitable</em>, but no one wants them to be published.
Unluckily, the <code>rake generate</code> command takes <em>too long</em> to run.  In
order to find them out more quickly, I quickly went over the
<code>Gemfile</code> of the repository for this blog, and saw that the Markdown
engine of Octopress is kramdown.  Therefore, I used the command line
version of this Markdown parser to convert my Markdown source file to
an HTML document by a Vim Ex command.</p>

<pre><code>:!kramdown % &gt; %&lt;.html
</code></pre>

<p>For this, I’ve written two posts describing the workflow of producing
HTML web pages consisting of math expressions from Markdown source
files using kramdown and MathJax.</p>

<h2 id="problem">Problem</h2>

<p>In <a href="/blog/2014/12/10/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-1/">the first post</a> in this series, I’ve made a list of steps
in Vim.  However, jumping to other files is laborious.  More
importantly, those steps involve browsing and copying of lines of
HTML code of the <code>&lt;head&gt;</code>, which loads MathJax, in other HTML files.
This can <em>seriously</em> slow down the editing process.  Unhappily, this
problem <em>isn’t</em> solved in <a href="/blog/2014/12/13/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-2/">the second post</a> in this series.</p>

<!-- more -->

<h2 id="solution">Solution</h2>

<h3 id="include-the-script-in-the-content">Include the script in the content</h3>

<p>There might be some option for the kramdown command line utility to
use accept an HTML template files during the code conversion.
However, I’m <em>too lazy</em> to search for them as I need to work on
math.<sup id="fnref:pp1"><a href="#fn:pp1" class="footnote">1</a></sup></p>

<p>Remembering that I defered the loading of JavaScripts in order to
boost the PageSpeed score of this site, I adpated the script to load
MathJax instead of fancyBox in my draft markdown file.<sup id="fnref:pp2"><a href="#fn:pp2" class="footnote">2</a></sup></p>

<p><figure class='code'><figcaption><span>Put this at the bottom </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">getScript</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">success</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">script</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">head</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">done</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nx">done</span> <span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span> <span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;loaded&#39;</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">==</span> <span class="s1">&#39;complete&#39;</span><span class="p">)</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">done</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">success</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">script</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="nx">script</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">head</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nx">head</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span><span class="nt">&lt;/script&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>getScript(“https://cdn.mathjax.org/mathjax/latest/MathJax.js?” +
</span><span class='line'>    “config=TeX-AMS-MML_HTMLorMML” +
</span><span class='line'>    “,https://vincenttam.github.io/javascripts/MathJaxLocal.js”,
</span><span class='line'>    function(){});<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>})();
</span><span class='line'><span class="ni">&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3 id="a-problem-with-vims-folding-arised">A problem with Vim’s folding arised</h3>

<p>By default, with the plugin <code>vim-markdown</code> installed, the sections are
<em>folded</em>.  Before I can continue editing at the end of the file, I
have to open the last fold, which contained more than 25 lines due to
the script enabling MathJax at the bottom.  As a result, I have to
move back to the middle of the last fold by pressing <code>k</code> for a while.
That annoys me.  If the script is contained in a separate fold, it’s
better.  Therefore, adding a blank line and then a line consisting of
three hyphens will fix this problem.</p>

<h2 id="inadequacies">Inadequacies</h2>

<hr />
<p>(Added on SEP 3RD, 2015)</p>

<p>Now I realised that kramdown will leave the trailing two backslashes
at each line inside <code>&lt;div&gt;</code> tags in Markdown source files <em>untouched</em>.</p>

<hr />

<p>In <a href="/blog/2014/12/13/a-quick-markdown-syntax-error-detection-for-writing-mathjax-equations-in-octopress-posts-2/">the second post</a> in this series, we know that <code>&lt;div&gt;</code> tag
prevents kramdown from converting the code inside the tag to HTML,
while in <a href="/blog/2014/09/14/kramdowns-markdown-attributes/">another old post about kramdown’s Markdown attributes</a>,
one can revert the above behaviour by simply adding an attribute
<code>markdown="1"</code> to the <code>&lt;div&gt;</code> tag.  These can be reflected in the
above test.</p>

<p>Usually, in math environments inside a $\rm \LaTeX$ document, double
backslashes <code>\\</code> start a new line, and it’s the same in MathJax.
Typing <em>two</em> backslashes in the Markdown source down will suffice.
Unluckily, in the <em>real Markdown source</em> for Octopress posts, <em>four</em>
<code>\</code> are needed.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:pp1">

      <p>For example, I have to think about
<a href="/blog/2015/08/04/some-thoughts-on-a-real-valued-function/">multi-variable real-valued functions</a>. <a href="#fnref:pp1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:pp2">

      <p>Refer to my old post
<a href="/blog/2014/12/29/octopress-pagespeed-jquery-and-fancybox/"><em>Octopress, PageSpeed, jQuery and fancyBox</em></a> in <em>Blog 1</em> for
details. <a href="#fnref:pp2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Octoshape on Ubuntu 14.04]]></title>
      <link href="https://vincenttam.github.io/blog/2015/06/13/octoshape-on-ubuntu-14-dot-04/"/>
    
    <updated>2015-06-13T22:26:34+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/06/13/octoshape-on-ubuntu-14-dot-04</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>I installed <a href="http://www.octoshape.com/support/infinite-hd-octoshape-app/">Octoshape player</a> 2 years ago on Ubuntu 12.04.
A year ago, I <a href="/blog/2014/08/12/ubuntu-distribution-upgrade-to-14-dot-04/">upgraded the OS to Ubuntu 14.04</a>.</p>

<h2 id="problem">Problem</h2>

<p>I tried running Octoshape streaming service on
<a href="http://demo.octoshape.com/arplayer3/?link=octoshape://streams.octoshape.net/Demo.Trailers_500">a sample test page</a> tonight.  Unluckily, it <em>failed</em> to
work.  On the test page, the output on the right-hand side was similar
to the one listed below.</p>

<pre><code>20:35:57.368: OctoProgressEvent: 0 - Connecting to Octoshape client
20:35:57.382: Player is waiting for a link input (this does not mean
that Octoshape is ready).
20:35:57.509: OctoProgressEvent: 83 - Connecting to Octoshape client
20:35:57.623: OctoProgressEvent: 166 - Connecting to Octoshape client
20:35:57.748: OctoProgressEvent: 249 - Connecting to Octoshape client
20:35:57.880: OctoProgressEvent: 332 - Connecting to Octoshape client
20:35:58.011: OctoProgressEvent: 415 - Connecting to Octoshape client
20:35:58.138: OctoProgressEvent: 498 - Connecting to Octoshape client
20:35:58.271: OctoProgressEvent: 581 - Connecting to Octoshape client
20:35:58.370: OctoProgressEvent: 664 - Connecting to Octoshape client
20:35:58.470: OctoProgressEvent: 747 - Connecting to Octoshape client
20:35:58.574: OctoProgressEvent: 830 - Connecting to Octoshape client
20:35:58.704: OctoProgressEvent: 913 - Connecting to Octoshape client
20:35:58.804: OctoProgressEvent: 996 - Connecting to Octoshape client
20:35:58.808: OctoProgressEvent: 1000 - Connecting to Octoshape client
</code></pre>

<!-- more -->

<h2 id="cause">Cause</h2>

<p>I ran <code>ls</code> in <code>/opt/octoshape</code>, which is the folder in which Octoshape
player had been installed.</p>

<pre class="cliUB"><code>$ pwd
/opt/octoshape
$ ls
eula.rtf                     sua-1011082-0-marker.txt
eula.txt                     sua-1011082-0-module.xml
OctoshapeClient              sua-1011082-0-OctoshapeClientSUA
setup.xml                    sua-1011082-0-OctoshapeClientSUA.sig
sua-1011082-0-confirmed.txt  sua-1011082-0-suapack-versions.txt
sua-1011082-0-dynfiles.zip
</code></pre>

<p>I suspected that the version of Octoshape was too <em>old</em>.</p>

<h2 id="solution">Solution</h2>

<p>I <em>removed the folder</em> where Octoshape was installed, and
<em>re-installed</em> the player again, then it <em>worked</em>.</p>

<hr />
<p>(Added on AUG 3RD, 2015)</p>

<p>This only worked for a while.  <strong>After reboot, it <em>won’t</em> start
again</strong>.</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[W3C Validator and SVGPan]]></title>
      <link href="https://vincenttam.github.io/blog/2015/06/01/w3c-validator-and-svgpan/"/>
    
    <updated>2015-06-01T18:08:54+08:00</updated>
    <id>https://vincenttam.github.io/blog/2015/06/01/w3c-validator-and-svgpan</id>
    
      <content type="html"><![CDATA[<h2 id="background">Background</h2>

<p>Similar to that of my recent post
<a href="/blog/2015/05/23/added-w3c-validated-logos-to-some-pages/"><em>Added <abbr title="World Wide Web Consortium">W3C</abbr> Validated Logos to Some Pages</em></a>—to get my SVG code
validated by <abbr title="World Wide Web Consortium">W3C</abbr>.</p>

<p>I’m now using <a href="https://www.cyberz.org/blog/2009/12/08/svgpan-a-javascript-svg-panzoomdrag-library/">SVGPan</a> for the zoom and drag functionality in SVG
images generated from PDF files which are generated by <code>xelatex</code> from
$\rm \LaTeX$ source code for <a href="http://www.texample.net/tikz/">TikZ</a> pictures.<sup id="fnref:pp_svgpan"><a href="#fn:pp_svgpan" class="footnote">1</a></sup></p>

<h2 id="problem">Problem</h2>

<p>I submited my SVG file to the <abbr title="World Wide Web Consortium">W3C</abbr>’s validator, which showed me one
error.  To illustrate this, I used an sample SVG in the official web
site of SVGPan as an example.</p>

<picture class="fancybox" title="SVGPan's SVG validation test result">
<source srcset="/images/posts/W3CSVG/err1292.png" media="(min-width: 1292px)" />
<source srcset="/images/posts/W3CSVG/err471.png" media="(min-width: 471px)" />
<img alt="SVGPan's SVG validation fails" src="https://vincenttam.github.io/images/posts/W3CSVG/err300.png" />
</picture>

<!-- more -->

<h2 id="solution">Solution</h2>

<p>Googling for something likes “svg script type” helps.  As can be seen,
the last <code>&gt;</code> is underlined, so I guessed that this kind of
self-closing tags <em>wouldn’t</em> the test.  Just like HTML, change this to
<code>&lt;script ...&gt;&lt;/script&gt;</code>.  From what I’d seen online, I set the <code>type</code>
attribute to <code>text/ecmascript</code>, and luckily this <em>works</em>.</p>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>For valid SVG files which embed SVGPan, the following items are
necessary:</p>

<ol>
  <li>A type declaration at the very beginning</li>
  <li>A <code>&lt;script&gt;</code> tag with appropriate <code>xlink:href</code> and <code>type</code>
attributes.</li>
</ol>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:pp_svgpan">

      <p>Refer to <a href="/blog/2014/08/02/zooming-svg-in-web-browsers/"><em>Zooming SVG in Web Browsers</em></a> in <em>Blog 1</em> for
details. <a href="#fnref:pp_svgpan" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
