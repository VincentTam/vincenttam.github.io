<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Pandoc | Blog 1]]></title>
  <link href="http://vincenttam.github.io/blog/categories/pandoc/atom.xml" rel="self"/>
  <link href="http://vincenttam.github.io/"/>
  <updated>2014-12-12T11:23:56+08:00</updated>
  <id>http://vincenttam.github.io/</id>
  <author>
    <name><![CDATA[Vincent Tam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
      <title type="html"><![CDATA[My Pandoc Template (1)]]></title>
      <link href="http://vincenttam.github.io/blog/2014/08/03/my-pandoc-template-1/"/>
    
    <updated>2014-08-03T17:21:01+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/08/03/my-pandoc-template-1</id>
    
      <content type="html"><![CDATA[<p>The last post about <a href="http://johnmacfarlane.net/pandoc/" title="pandoc—a universal document converter">pandoc</a> was written four months ago.  Last week,
I slightly changed the pandoc template <code>default.latex</code> on
<a href="https://github.com/jgm/pandoc-templates" title="Templates for pandoc">jgm/pandoc-templates</a> so that users can easily create $\rm \LaTeX$
documents with</p>

<ul>
  <li>1-inch margin; and</li>
  <li>one-half (or double) spacing.</li>
</ul>

<p>The following command can create a PDF using the template.</p>

<pre class="cli"><code>$ pandoc src.mkd --template=my_template1.latex -o out.pdf
</code></pre>

<p>I hope that more people will use pandoc and write in Markdown.</p>

<!-- more -->

<p><div><script src='https://gist.github.com/ffad6efe2c65d5e70b28.js?file=my_template1.latex'></script>
<noscript><pre><code>\documentclass[12pt,a4paper]{$documentclass$}
$if(fontfamily)$
\usepackage{$fontfamily$}
$else$
\usepackage{lmodern}
$endif$
\usepackage{setspace}
\setstretch{1.241} % for one half spacing of 12pt
%\setstretch{1.655} % for double spacing of 12pt
\usepackage{amssymb,amsmath}
\usepackage{ifxetex,ifluatex}
\usepackage{fixltx2e} % provides \textsubscript
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[T1]{fontenc}
  \usepackage[utf8]{inputenc}
$if(euro)$
  \usepackage{eurosym}
$endif$
\else % if luatex or xelatex
  \ifxetex
    \usepackage{mathspec}
    \usepackage{xltxtra,xunicode}
  \else
    \usepackage{fontspec}
  \fi
  \defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}
  \newcommand{\euro}{€}
$if(mainfont)$
    \setmainfont{$mainfont$}
$endif$
$if(sansfont)$
    \setsansfont{$sansfont$}
$endif$
$if(monofont)$
    \setmonofont[Mapping=tex-ansi]{$monofont$}
$endif$
$if(mathfont)$
    \setmathfont(Digits,Latin,Greek){$mathfont$}
$endif$
\fi
% use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
% use microtype if available
\IfFileExists{microtype.sty}{\usepackage{microtype}}{}
\usepackage[margin=1in]{geometry}
$if(natbib)$
\usepackage{natbib}
\bibliographystyle{$if(biblio-style)$$biblio-style$$else$plainnat$endif$}
$endif$
$if(biblatex)$
\usepackage{biblatex}
$if(biblio-files)$
\bibliography{$biblio-files$}
$endif$
$endif$
$if(listings)$
\usepackage{listings}
$endif$
$if(lhs)$
\lstnewenvironment{code}{\lstset{language=Haskell,basicstyle=\small\ttfamily}}{}
$endif$
$if(highlighting-macros)$
$highlighting-macros$
$endif$
$if(verbatim-in-note)$
\usepackage{fancyvrb}
$endif$
$if(tables)$
\usepackage{longtable,booktabs}
$endif$
$if(graphics)$
\usepackage{graphicx}
\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width&gt;\linewidth\linewidth\else\Gin@nat@width\fi}
\def\maxheight{\ifdim\Gin@nat@height&gt;\textheight\textheight\else\Gin@nat@height\fi}
\makeatother
% Scale images if necessary, so that they will not overflow the page
% margins by default, and it is still possible to overwrite the defaults
% using explicit options in \includegraphics[width, height, ...]{}
\setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
$endif$
\ifxetex
  \usepackage[setpagesize=false, % page size defined by xetex
              unicode=false, % unicode breaks when used with xetex
              xetex]{hyperref}
\else
  \usepackage[unicode=true]{hyperref}
\fi
\hypersetup{breaklinks=true,
            bookmarks=true,
            pdfauthor={$author-meta$},
            pdftitle={$title-meta$},
            colorlinks=true,
            citecolor=$if(citecolor)$$citecolor$$else$blue$endif$,
            urlcolor=$if(urlcolor)$$urlcolor$$else$blue$endif$,
            linkcolor=$if(linkcolor)$$linkcolor$$else$magenta$endif$,
            pdfborder={0 0 0}}
\urlstyle{same}  % don&#39;t use monospace font for urls
$if(links-as-notes)$
% Make links footnotes instead of hotlinks:
\renewcommand{\href}[2]{#2\footnote{\url{#1}}}
$endif$
$if(strikeout)$
\usepackage[normalem]{ulem}
% avoid problems with \sout in headers with hyperref:
\pdfstringdefDisableCommands{\renewcommand{\sout}{}}
$endif$
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
\setlength{\emergencystretch}{3em}  % prevent overfull lines
$if(numbersections)$
\setcounter{secnumdepth}{5}
$else$
\setcounter{secnumdepth}{0}
$endif$
$if(verbatim-in-note)$
\VerbatimFootnotes % allows verbatim text in footnotes
$endif$
$if(lang)$
\ifxetex
  \usepackage{polyglossia}
  \setmainlanguage{$mainlang$}
\else
  \usepackage[$lang$]{babel}
\fi
$endif$

$if(title)$
\title{$title$$if(subtitle)$\\\vspace{0.5em}{\large $subtitle$}$endif$}
$endif$
$if(author)$
\author{$for(author)$$author$$sep$ \and $endfor$}
$endif$
\date{$date$}
$for(header-includes)$
$header-includes$
$endfor$

\begin{document}
$if(title)$
\maketitle
$endif$
$if(abstract)$
\begin{abstract}
$abstract$
\end{abstract}
$endif$

$for(include-before)$
$include-before$

$endfor$
$if(toc)$
{
\hypersetup{linkcolor=black}
\setcounter{tocdepth}{$toc-depth$}
\tableofcontents
}
$endif$
$if(lot)$
\listoftables
$endif$
$if(lof)$
\listoffigures
$endif$
$body$

$if(natbib)$
$if(biblio-files)$
$if(biblio-title)$
$if(book-class)$
\renewcommand\bibname{$biblio-title$}
$else$
\renewcommand\refname{$biblio-title$}
$endif$
$endif$
\bibliography{$biblio-files$}

$endif$
$endif$
$if(biblatex)$
\printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$

$endif$
$for(include-after)$
$include-after$

$endfor$
\end{document}</code></pre></noscript></div>
</p>

]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Complicated Pandoc Commands]]></title>
      <link href="http://vincenttam.github.io/blog/2014/03/15/complicated-pandoc-commands/"/>
    
    <updated>2014-03-15T12:55:46+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/03/15/complicated-pandoc-commands</id>
    
      <content type="html"><![CDATA[<p>I don’t need to memorize these commands.  Instead, what I need is to
create a page here so that I can make quickly get the right command
for my work.  This saves the time for checking and testing the right
command.</p>

<h2 id="pandoc-markdown">Pandoc markdown</h2>

<p>Official demo:
<a href="http://johnmacfarlane.net/pandoc/demos.html">http://johnmacfarlane.net/pandoc/demos.html</a></p>

<h3 id="beamer">Beamer</h3>

<p>A shell command for APA style reference list:</p>

<pre><code>$ pandoc -t beamer -s -S --biblio mybib.bib\
&gt; --csl /path/to/apa.csl % -V theme:Berlin -o %&lt;.pdf
</code></pre>

<h3 id="customized-pdf">Customized PDF</h3>
<p>(Added on AUG 03RD, 2014)</p>

<p>The command below is just an example of narrowing the margin, and
choosing a larger font.</p>

<pre><code>$ pandoc % -V geometry:margin=1in -V fontsize:12pt\
&gt; -V linestretch:1.655 -o %&lt;.pdf 
</code></pre>

<p>For more variables, refer to the User Guide:
<a href="http://johnmacfarlane.net/pandoc/README.html#templates">http://johnmacfarlane.net/pandoc/README.html#templates</a></p>

<p>For many ordinary computer users who are used to write documents using
WYSIWYG editors, the above command is quite scary, so I’ve written a
custom template to save the trouble.  See
<a href="/blog/2014/08/03/my-pandoc-template-1/"><em>My Pandoc Template (1)</em></a> for details.</p>

<!-- vim:set tw=70 wrap: -->
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Using gVim on Windows to Create Pandoc Slides]]></title>
      <link href="http://vincenttam.github.io/blog/2014/03/15/using-gvim-on-windows-to-create-pandoc-slides/"/>
    
    <updated>2014-03-15T12:49:05+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/03/15/using-gvim-on-windows-to-create-pandoc-slides</id>
    
      <content type="html"><![CDATA[<p>At night on 25/02/14, I tried to open gVim and use the command mode to
issue system commands, so that I can use pandoc to create $\rm \LaTeX$
Beamer slides.  However, with the correct command, gVim went wrong and
in the resulting PDF file, all lines in the source markdown files were
concatenated into one single line.  I hadn’t encountered such error
last time.</p>

<p>With the <em>same</em> command, I managed to get back my $\rm \LaTeX$ Beamer
slides.  As a Vim lover, I’d like to try to do things <em>within</em> the
editor.  Therefore, I changed to the project directory and start gVim
through the command prompt.  Then I used <code>q:</code> to find the
corresponding <code>pandoc</code> command, and re-ran it.  Job done!</p>

<!-- vim:set tw=70:wrap: -->
]]></content>
    
  </entry>
  
  <entry>
    
      <title type="html"><![CDATA[Including a Bibliography in Pandoc Markdown on Ubuntu 12.04 LTS]]></title>
      <link href="http://vincenttam.github.io/blog/2014/02/23/including-a-bibliography-in-pandoc-markdown-on-ubuntu-12-04-lts/"/>
    
    <updated>2014-02-23T18:16:39+08:00</updated>
    <id>http://vincenttam.github.io/blog/2014/02/23/including-a-bibliography-in-pandoc-markdown-on-ubuntu-12-04-lts</id>
    
      <content type="html"><![CDATA[<p>I tried typesetting a $\rm \LaTeX$ Beamer slide using pandoc markdown
since it’s easy to use.  According to the official demo<sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup>, with a
<abbr title="Citation Style Language">CSL</abbr> file<sup id="fnref:2"><a href="#fn:2" class="footnote">2</a></sup>, which specifies the style to the citation, users are
suppose to be able to create a document with a bibliography.  However,
when I ran the following command in Vim on Ubuntu 12.04 LTS, pandoc
hanged.</p>

<pre><code>:!pandoc -s -S --biblio mybib.bib --csl foo.csl -t beamer %\
-V theme:Berlin -o %&lt;.pdf
</code></pre>

<p>I admit that it’s <em>too</em> complicated.  I tested several things:</p>

<ol>
  <li>$\rm \LaTeX$ Beamer class</li>
  <li>Bibliography</li>
</ol>

<p>To figure out which part of the command is wrong, I tried to remove
the part related to item 1.  Issuing a simple command for item 2, the
usage of one of the <abbr title="Central Processing Unit">CPU</abbr> in my computer rose to almost 100%, and
remained high with small fluctuations.</p>

<pre><code>:!pandoc -s -S --biblio biblio.bib -o %&lt;.html
</code></pre>

<p>This issue is indeed one faced by the community of Ubuntu users, so I
can find official advices on GitHub.  Eventually, the last comment on
the page has solved my problem.  I think installing
<code>libghc-citeproc-hs-data</code> is quicker than installing the latest
(1.9.4.2-2) version of the DEB file for pandoc.</p>

<p>Posted via <a href="http://0x3f.org/blog/ultrablog-as-an-ultimate-vim-blogging-plugin/">UltraBlog.vim</a>.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="http://johnmacfarlane.net/pandoc/demos.html">Pandoc demos item 24 (Markdown citations)</a> <a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p><a href="https://github.com/citation-style-language/styles">CSL’s official repository on GitHub</a> <a href="#fnref:2" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
    
  </entry>
  
</feed>
